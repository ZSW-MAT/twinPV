<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AtomicusChart.Core</name>
    </assembly>
    <members>
        <member name="T:PackageTool.PackageReader">
            <summary>
            Represents package reader class.
            </summary>
        </member>
        <member name="P:PackageTool.PackageReader.NodeCount">
            <summary>
            Gets or sets node count.
            </summary>
        </member>
        <member name="M:PackageTool.PackageReader.#ctor(System.IO.Stream)">
            <summary>
            Initialzes new instance of <see cref="T:PackageTool.PackageReader"/>.
            </summary>
            <param name="sourceStream">Source stream.</param>
        </member>
        <member name="M:PackageTool.PackageReader.GetNodeData(System.String)">
            <summary>
            Receives the node data. Returns null if the node doesn't exist.
            </summary>
            <param name="path">Node path.</param>
            <returns>Node data.</returns>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.AngleTicksCalculator">
            <summary>
            Calculate tick of angle step.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.AngleTicksCalculator.#ctor(System.Double,System.Double,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="initialStart">Scaled by start angle (measured in part of Pi).</param>
            <param name="initialStop">Scaled by stop angle (measured in part of Pi).</param>
            <param name="desiredMajorTicksCount">Desired count of major ticks.</param>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.AngleTicksCalculator.CalculateTicks">
            <summary>
            Calculate tick of angle step.
            </summary>
            <returns>Scaled by PI angles.</returns>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.LogTickCalculator.#ctor(AtomicusChart.Interface.AxesData.AxisCalculationDescription)">
            <summary>
            Constructor.
            </summary>
            <param name="description">Description of axis.</param>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.LogTickCalculator.CalculateTicks(System.Collections.ObjectModel.ReadOnlyCollection{AtomicusChart.Interface.AxesData.MajorTick}@,System.Collections.ObjectModel.ReadOnlyCollection{AtomicusChart.Interface.AxesData.MinorTick}@)">
            <summary>
            Execute calculation and get ticks.
            </summary>
            <param name="majorTicks"></param>
            <param name="minorTicks"></param>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.PolarCoordinatesHelper">
            <summary>
            Help to get segment containing rectangle.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.PolarCoordinatesHelper.PolarPoint">
            <summary>
            Contain information about point in polar coordinate system.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.AxesRendering.TickCalculation.PolarCoordinatesHelper.MinRadius">
            <summary>
            Min radius.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.AxesRendering.TickCalculation.PolarCoordinatesHelper.MaxRadius">
            <summary>
            Max radius.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.AxesRendering.TickCalculation.PolarCoordinatesHelper.StartSectorAngle">
            <summary>
            Start sector angle.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.AxesRendering.TickCalculation.PolarCoordinatesHelper.EndSectorAngle">
            <summary>
            End sector angle.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.AxesRendering.TickCalculation.PolarCoordinatesHelper.SectorAngleLength">
            <summary>
            Sector angle length.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.PolarCoordinatesHelper.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="horizontalBegin">Horizontal coordinate. Begin of rectangle.</param>
            <param name="horizontalEnd">Horizontal coordinate. End of rectangle.</param>
            <param name="verticalBegin">Vertical coordinate. Begin of rectangle.</param>
            <param name="verticalEnd">Vertical coordinate. End of rectangle.</param>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.SqrtTickCalculator.#ctor(AtomicusChart.Interface.AxesData.AxisCalculationDescription)">
            <summary>
            Constructor.
            </summary>
            <param name="description">Description of axis.</param>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.SqrtTickCalculator.CalculateTicks(System.Collections.ObjectModel.ReadOnlyCollection{AtomicusChart.Interface.AxesData.MajorTick}@,System.Collections.ObjectModel.ReadOnlyCollection{AtomicusChart.Interface.AxesData.MinorTick}@)">
            <summary>
            Execute calculation and get ticks.
            </summary>
            <param name="majorTicks"></param>
            <param name="minorTicks"></param>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.FragmentationInfo">
            <summary>
            Container for description of segment fragmentation.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.AxesRendering.TickCalculation.FragmentationInfo.MajorStepLength">
            <summary>
            Gets major step length.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.AxesRendering.TickCalculation.FragmentationInfo.MinorStepLength">
            <summary>
            Gets minor step length.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.AxesRendering.TickCalculation.FragmentationInfo.MinorSegmentsCountOnMajor">
            <summary>
            Gets minor segment per major tick count.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.FragmentationInfo.#ctor(System.Double,System.Double,System.Int32)">
            <summary>
            Initializes <see cref="T:AtomicusChart.Core.AxesRendering.TickCalculation.FragmentationInfo"/> structure.
            </summary>
            <param name="majorStepLength">Major step length.</param>
            <param name="minorStepLength">Minor step length.</param>
            <param name="minorSegmentsCountOnMajor">Minor segment per major tick count.</param>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.BaseTicksCalculator">
            <summary>
            Base class for calculation process.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.BaseTicksCalculator.#ctor(AtomicusChart.Interface.AxesData.AxisCalculationDescription)">
            <summary>
            Constructor.
            </summary>
            <param name="description">Description of axis.</param>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.BaseTicksCalculator.GetTicks">
            <summary>
            Execute calculation and get result.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.BaseTicksCalculator.CalculateTicks(System.Collections.ObjectModel.ReadOnlyCollection{AtomicusChart.Interface.AxesData.MajorTick}@,System.Collections.ObjectModel.ReadOnlyCollection{AtomicusChart.Interface.AxesData.MinorTick}@)">
            <summary>
            Calculate tick.
            </summary>
            <param name="majorTicks"></param>
            <param name="minorTicks"></param>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.CalculatorHelper">
            <summary>
            Class helper for ticks calculation.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.CountTicksCalculator">
            <summary>
            Class helper for calculation of count of ticks.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.CountTicksCalculator.#ctor(System.Double,System.Int32,System.Nullable{AtomicusChart.Interface.AxesData.TickCalculationOptions})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.AxesRendering.TickCalculation.CountTicksCalculator"/>.
            </summary>
            <param name="segmentLength">Segment length.</param>
            <param name="desiredMajorTicksCount">Desired count of major ticks.</param>
            <param name="tickCalculationOptions">Tick calculation options.</param>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.CountTicksCalculator.GetNumberOfElementsFrom10To100(System.Int32@,System.Int32@)">
            <summary>
            Get count of elements (elemental segments).
            </summary>
            <param name="elementsCount">Count of elements.</param>
            <param name="powerOf10InOneElement">Power of ten (1 * 10 ^ powerOf10InOneElement) length of element.</param>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.CountTicksCalculator.GetFragmentationInfo">
            <summary>
            Gets the calculator fragmentation info.
            </summary>
            <returns>Result fragmentation info.</returns>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.FixedStepCalculator">
            <summary>
            Calculator of axes with fixed step.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.TickCalculator">
            <summary>
            Class helper for ticks calculation.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.TickCalculator.GetLinearTicks(AtomicusChart.Interface.AxesData.AxisCalculationDescription)">
            <summary>
            Get linear ticks.
            </summary>
            <param name="description">Segment for ticks calculation.</param>
            <returns>Result of ticks calculation.</returns>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.TickCalculator.GetSqrtTicks(AtomicusChart.Interface.AxesData.AxisCalculationDescription)">
            <summary>
            Get ticks for sqrt scaling.
            </summary>  
            <param name="description">Segment of axis. Segment should be described by SQR scaled values.</param>
            <returns>Result of tick calculation.</returns>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.TickCalculator.GetLogTicks(AtomicusChart.Interface.AxesData.AxisCalculationDescription)">
            <summary>
            Get ticks for log10 scaling.
            </summary>
            <param name="description">Segment of axis. Segment should be described by log10 scaled values.</param>
            <returns>Result of ticks calculation.</returns>
        </member>
        <member name="M:AtomicusChart.Core.AxesRendering.TickCalculation.TickCalculator.GetAngles(AtomicusChart.Interface.AxesData.AxisCalculationDescription)">
            <summary>
            Get tick of angle.
            </summary>
            <param name="description">Segment angles.</param>
            <returns>Result of ticks calculation.</returns>
        </member>
        <member name="T:AtomicusChart.Core.AxesRendering.TickCalculation.GetTicks">
            <summary>
            Process of ticks computation.
            </summary>
            <param name="description">Description of axis for ticks computation.</param>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseWithBoundsDataSurrogate`1">
            <summary>
            Represents base surrogate class with common GPU bounds tracking logic implemented.
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="P:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseWithBoundsDataSurrogate`1.InitialBoundsCache">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseWithBoundsDataSurrogate`1.#ctor(`0,AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg)">
            <summary>
            Ctor.
            </summary>
            <param name="data">Data instance.</param>
            <param name="surrogateCreationArg">Arguments for surrogate creation.</param>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.IInitialBoundsCacheOwner">
            <summary>
            Represents interface that contains reference to <see cref="P:AtomicusChart.Core.BaseTypes.BaseDataTypes.IInitialBoundsCacheOwner.InitialBoundsCache"/>.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.BaseTypes.BaseDataTypes.IInitialBoundsCacheOwner.InitialBoundsCache">
            <summary>
            Gets <see cref="P:AtomicusChart.Core.BaseTypes.BaseDataTypes.IInitialBoundsCacheOwner.InitialBoundsCache"/> for the object.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.BaseNode">
            <summary>
            Base class for bounds.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.DataNode">
            <summary>
            Data node.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.DataNode.DataChanged">
            <summary>
            Data changed.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.DataNode.TransformChanged">
            <summary>
            Transform changed.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.CompositeNode">
            <summary>
            Node of composite object.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.CompositeNode.TransformChanged">
            <summary>
            Composite transform changed.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsComputationRegistration">
            <summary>
            Bounds computation registration.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsComputationRegistration.AddToQueue(AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache)">
            <summary>
            Add cache for computation.
            </summary>
            <param name="initialBoundsCache">Instance for computation.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsComputationRegistration.RemoveFromQueue(AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache)">
            <summary>
            Remove cache from computation.
            </summary>
            <param name="initialBoundsCache">Instance for computation.</param>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsRegistration">
            <summary>
            Register data nodes.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsRegistration.RegisterData(AtomicusChart.Interface.PresentationData.BaseTypes.RenderData,AtomicusChart.Core.Presenters.RenderDataBoundsTracking.IScaledBoundsOwner)">
            <summary>
            Register render data.
            </summary>
            <param name="renderData">Render data.</param>
            <param name="boundsOwner">Owner bounds tracker.</param>
            <returns>Data node.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsRegistration.RegisterCollectionData(AtomicusChart.Interface.PresentationData.BaseTypes.BaseCompositeRenderData)">
            <summary>
            Register composite nodes.
            </summary>
            <param name="composite">Composite.</param>
            <returns>Composite node.</returns>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache">
            <summary>
            Represents class that is responsible for initial bounds tracking.
            </summary>
        </member>
        <member name="E:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache.BoundsChanged">
            <summary>
            The event is called whenever initial bounds are changed.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache.#ctor(AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsComputer)">
            <summary>
            Ctor.
            </summary>
            <param name="boundsComputer">Bounds computer.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache.TryGetScaledBounds(AtomicusChart.Interface.Data.Scales@,AtomicusChart.Interface.CameraView.Bounds@)">
            <summary>
            Gets initial bounds.
            </summary>
            <param name="scales">Scales.</param>
            <param name="bounds">Initial bounds.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache.RaiseBoundsChanged">
            <summary>
            Notifies about initial bounds changes.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsComputer">
            <summary>
            Represents interface that contains positions buffer <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IPositionBufferOwner">
            <summary>
            Represents interface that contains positions buffer <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IPositionBufferOwner.GetPositionVbb(SharpDX.Direct3D11.VertexBufferBinding@)">
            <summary>
            Gets positions buffer <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.
            </summary>
            <returns>Positions buffer <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.SimpleBoundsComputer">
            <summary>
            Contains logic for simple bounds compute mechanics.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.SimpleBoundsComputer.#ctor(AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IPositionBufferOwner,AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.SimpleBoundsComputer"/>.
            </summary>
            <param name="positionBufferOwner">Positions buffer owner.</param>
            <param name="computeShaderAdapter">Compute shader adapter instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.SimpleBoundsComputer.ComputeBounds">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.SimpleDrawRegionBoundsComputer">
            <summary>
            Contains logic for draw-region-based bounds compute mechanics.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.SimpleDrawRegionBoundsComputer.#ctor(AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IDrawRegionPositionBufferOwner,AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.SimpleBoundsComputer"/>.
            </summary>
            <param name="positionBufferOwner">Positions buffer owner.</param>
            <param name="computeShaderAdapter">Compute shader adapter instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.SimpleDrawRegionBoundsComputer.ComputeBounds">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IDrawRegionPositionBufferOwner">
            <summary>
            Represents extension of <see cref="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IPositionBufferOwner"/>.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IDrawRegionPositionBufferOwner.DrawRegion">
            <summary>
            Gets the owner draw region.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.FixedStepBoundsComputer.ComputeBounds">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.StructuredSrvBoundsComputer.ComputeBounds">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1">
            <summary>
            Represents base class for data surrogates with it's common routines.
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="F:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.Data">
            <summary>
            Gets data the surrogate associated with.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.SurrogateCreationArg">
            <summary>
            <see cref="F:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.SurrogateCreationArg"/> the surrogate was created with.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.Device">
            <summary>
            Gets graphics device.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.Context">
            <summary>
            Gets graphics device context.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.#ctor(`0,AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="surrogateCreationArg"></param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.CreateTracker(`0)">
            <summary>
            Creates data tracker.
            </summary>
            <param name="data">Data for tracking.</param>
            <returns>Result tracker.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.OnDisposing">
            <summary>
            The method is called during the surrogate disposing.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseDataSurrogate`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseRedrawTracker">
            <summary>
            Represents class that implements base logic for presentation invalidation caused by property changes.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseRedrawTracker.#ctor(System.ComponentModel.INotifyPropertyChanged,System.Collections.Generic.HashSet{System.String},AtomicusChart.Core.DataManagement.IPresentationTracker)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseRedrawTracker"/>.
            </summary>
            <param name="data">Data for tracking.</param>
            <param name="names">Names that causes invalidation.</param>
            <param name="presentationTracker">Presentation tracker to notify.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseRedrawTracker.Redraw">
            <summary>
            Request redraw.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.BaseRedrawTracker.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.SurrogateTracker`2">
            <summary>
            Represents surrogate property-to-action mapper class.
            </summary>
            <typeparam name="TSurrogate">Surrogate type.</typeparam>
            <typeparam name="TData">Data type.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.SurrogateTracker`2.#ctor(`0,System.Collections.Generic.Dictionary{System.String,System.Action{`0}})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.SurrogateTracker`2"/>.
            </summary>
            <param name="container">Data surrogate.</param>
            <param name="handlers">Property name to action dictionary.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.SurrogateTracker`2.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.EmptyTracker">
            <summary>
            Represents empty property tracker class.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.BaseTypes.BaseDataTypes.EmptyTracker.Instance">
            <summary>
            Gets statc instance of <see cref="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.EmptyTracker"/>.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.EmptyTracker.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.IPresenter">
            <summary>
            Represents base interface for render data presenter class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.IPresenter.RenderOpaque(AtomicusChart.Core.RenderingCommon.DrawCallInfo,AtomicusChart.Core.BaseTypes.BaseDataTypes.ITranslucentRendererRegistrar)">
            <summary>
            Renders opaque part of the data.
            </summary>
            <param name="drawCallInfo">Current draw call info.</param>
            <param name="translucentRendererRegistrar">Registrar for translucent rendering.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.IPresenter.RenderPickmap(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <summary>
            Renders translucent part of the data.
            </summary>
            <param name="drawCallInfo">Current draw call info.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.IPresenter.SetParentTransform">
            <summary>
            Setup transform from parent source.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.ITranslucentRenderer">
            <summary>
            Allows translucent rendering.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.ITranslucentRenderer.RenderTranslucent(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <summary>
            Renders translucent part of the data.
            </summary>
            <param name="drawCallInfo">Current draw call info.</param>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.ITranslucentRendererRegistrar">
            <summary>
            Contains translucent renderer registration logic.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.ITranslucentRendererRegistrar.AddForTranslucentRendering(AtomicusChart.Core.BaseTypes.BaseDataTypes.ITranslucentRenderer,AtomicusChart.Interface.Data.Vector3F)">
            <summary>
            Adds the renderer to the translucent rendering queue.
            </summary>
            <param name="translucentRenderer">Translucent renderer instance.</param>
            <param name="dataCenter">Data center used for depth sorting.</param>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseDataTypes.ITransformsSource">
            <summary>
            Represents transformation source interface.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseDataTypes.ITransformsSource.GetTransform">
            <summary>
            Gets the source transform info.
            </summary>
            <returns>Transform.</returns>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.Logger">
            <summary>
            Helps to log and store exceptions.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.Logger.#ctor(System.Int32)">
            <summary>
            Ctor.
            </summary>
            <param name="maxCount">Max records count.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.Logger.Log(System.String,System.Boolean)">
            <summary>
            Log message.
            </summary>
            <param name="message">Message to log.</param>
            <param name="addStackTrace">Add stacktrace to message.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.Logger.GetMergedString">
            <summary>
            Get string with all messages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.Logger.TrySaveContent">
            <summary>
            Try to save log content.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.TimeReporter">
            <summary>
            Help to track time.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.TimeReporter.StartLap(System.String,System.Int32)">
            <summary>
            Start lap.
            </summary>
            <param name="startMessage"></param>
            <param name="capacity"></param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.TimeReporter.ReportEvent(System.String)">
            <summary>
            Report event.
            </summary>
            <param name="eventName">Name of event.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.TimeReporter.StopLap">
            <summary>
            Stop lap.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.TimeLap">
            <summary>
            Time lap.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.TimeLap.CreateAndRun(System.String)">
            <summary>
            Create object measuring time.
            </summary>
            <param name="description">lap description.</param>
            <returns>Lap.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.TimeLap.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.DebugHelper">
            <summary>
            Contains helper methods for debug info output.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.DebugHelper.Message(System.String)">
            <summary>
            Outputs the specified message.
            </summary>
            <param name="message">Message for output.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.DebugHelper.WriteCallStack">
            <summary>
            Writes current call stack information.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.DebugHelper.DebugInteraction(System.String)">
            <summary>
            Writes message used for interaction debug.
            </summary>
            <param name="message">Message for output.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.DebugHelper.ExceptionIfTrue(System.Boolean)">
            <summary>
            Throws the exception if true.
            </summary>
            <param name="condition">Condition.</param>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.GpuPerformanceHelper">
            <summary>
            Helps to measure GPU time.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.GpuPerformanceHelper.CreateAndRun(SharpDX.Direct3D11.Device,System.String)">
            <summary>
            Start lap.
            </summary>
            <param name="device">Device.</param>
            <param name="description">Test description.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.Debug.GpuPerformanceHelper.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.BufferSrvCache`1">
            <summary>
            Represents buffer shader resource view cache.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.BufferSrvCache`1.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.BufferSrvCache`1"/> for the specified graphics device.
            </summary>
            <param name="device">Graphics device.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.BufferSrvCache`1.UpdateData(AtomicusChart.Core.BaseTypes.BaseUtilTypes.PooledArray{`0})">
            <summary>
            Updates the cache with the specified data.
            </summary>
            <param name="data">Data for update.</param>
            <returns>Cache result.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.BufferSrvCache`1.UpdateData(`0[],System.Int32)">
            <summary>
            Updates the cache with the specified data.
            </summary>
            <param name="data">Data for update.</param>
            <param name="count">Item count.</param>
            <returns>Cache result.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.BufferSrvCache`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.SingleColorVbbCache">
            <summary>
            Cache for single color vbb.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.SingleColorVbbCache.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Ctor.
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.SingleColorVbbCache.UpdateColor(AtomicusChart.Interface.Data.Color4)">
            <summary>
            Update cache.
            </summary>
            <param name="color">Color.</param>
            <returns>Vbb.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.SingleColorVbbCache.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VertexBufferBindingCache`1">
            <summary>
            Represents <see cref="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VertexBufferBindingCache`1"/> cache class.
            </summary>
            <typeparam name="T">Data type.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VertexBufferBindingCache`1.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VertexBufferBindingCache`1"/> for the specified graphics device.
            </summary>
            <param name="device">Graphics device instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VertexBufferBindingCache`1.UpdateVertices(`0[])">
            <summary>
            Updates the cache with the specified data.
            </summary>
            <param name="vertexData">Data for update.</param>
            <returns>Vertex buffer binding with the data.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VertexBufferBindingCache`1.UpdateVertices(AtomicusChart.Core.BaseTypes.BaseUtilTypes.PooledArray{`0})">
            <summary>
            Updates the cache with the specified data.
            </summary>
            <param name="pooledArray">Pooled array.</param>
            <returns>Vertex buffer binding with the data.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VertexBufferBindingCache`1.UpdateVertices(`0*,System.Int32)">
            <summary>
            Updates the cache with the specified data.
            </summary>
            <param name="ptr">Pointer to data.</param>
            <param name="newCount">New count of elements.</param>
            <returns>Vertex buffer binding with the data.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VertexBufferBindingCache`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.PooledArray`1">
            <summary>
            Pooled array.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AtomicusChart.Core.BaseTypes.BaseUtilTypes.PooledArray`1.Array">
            <summary>
            Array in use.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BaseTypes.BaseUtilTypes.PooledArray`1.Size">
            <summary>
            Used size.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.PooledArray`1.Rent(System.Int32)">
            <summary>
            Rent <see cref="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.PooledArray`1"/>.
            </summary>
            <param name="minSize">Min size of array.</param>
            <returns>Pooled array.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.PooledArray`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1">
            <summary>
            Represents collection tracker class.
            </summary>
            <typeparam name="T">Item type.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1"/>.
            </summary>
            <param name="collection">Collection for tracking.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1.OnInitialized">
            <summary>
            Call this method in constructor of extended class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1.ItemAdded(`0)">
            <summary>
            This method is called on item add.
            </summary>
            <param name="newItem">Added item.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1.ItemRemoved(`0)">
            <summary>
            This method is called on item remove.
            </summary>
            <param name="oldItem">Removed item.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1.ClearAll">
            <summary>
            This method is called on collection clear.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1.CollectionChangesFinished">
            <summary>
            This method is called after collection changes.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.CollectionTracker`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VideoAdapterInfo">
            <summary>
            Contains video adapter information.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VideoAdapterInfo.Name">
            <summary>
            Gets video adapter name.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VideoAdapterInfo.ExactDeviceId">
            <summary>
            Gets video adapter exact device unique identifier.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VideoAdapterInfo.#ctor(System.Int32,System.String)">
            <summary>
            Initializes new structure.
            </summary>
            <param name="exactDeviceId">Exact device unique identifier.</param>
            <param name="name">Adapter name.</param>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.Exceptions.UnexpectedException">
            <summary>
            Represents unexpected exception class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.Exceptions.UnexpectedException.#ctor(System.String)">
            <summary>
            Initialize new instance of <see cref="T:AtomicusChart.Core.BaseTypes.Exceptions.UnexpectedException"/>.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.Exceptions.UnexpectedException.#ctor">
            <summary>
            Initialize new instance of <see cref="T:AtomicusChart.Core.BaseTypes.Exceptions.UnexpectedException"/>.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.Exceptions.HardwareNotSupportedChartException">
            <summary>
            Hardware not supported chart.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.Exceptions.HardwareNotSupportedChartException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.Exceptions.HardwareNotSupportedChartException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.BaseForDataRegistration`1">
            <summary>
            Represents base class that should be extended to implement module registartion logic.
            </summary>
            <typeparam name="T"><see cref="T:AtomicusChart.Core.BaseTypes.Registerer"/> type.</typeparam>
        </member>
        <member name="T:AtomicusChart.Core.BaseTypes.Registerer">
            <summary>
            Contains module registration logic.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseTypes.Registerer.Register(AtomicusChart.Core.CommonInfrastructure.RegisterDependantAssembley)">
            <summary>
            This method is called as module registration routine.
            </summary>
            <param name="registrationHelper">Delegete that helps to register dependencies.</param>
        </member>
        <member name="T:AtomicusChart.Core.CameraTracker">
            <summary>
            Track camera state.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.CameraTracker.#ctor(AtomicusChart.Core.DataManagement.DataPresentationCore,AtomicusChart.Interface.CameraView.ContextView)">
            <summary>
            Ctor.
            </summary>
            <param name="core">Core,</param>
            <param name="contextView">View.</param>
        </member>
        <member name="M:AtomicusChart.Core.CameraTracker.TryRedo">
            <summary>
            Try undo action.
            </summary>
            <returns>Is undo valid.</returns>
        </member>
        <member name="M:AtomicusChart.Core.CameraTracker.TryUndo">
            <summary>
            Try undo action.
            </summary>
            <returns>Is undo valid.</returns>
        </member>
        <member name="M:AtomicusChart.Core.CameraTracker.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.PickingContext">
            <summary>
            Represents context used for picking operations.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.PickingContext.RenderingManager">
            <summary>
            Gets the context rendering options.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.PickingContext.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.PickingContext.GetPickMap">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.PickingContext.ClearPickingCache">
            <summary>
            Clears picking cache.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.PickingContext.ClearCacheIfNewSize(AtomicusChart.Interface.Data.Vector2Int)">
            <summary>
            ClearCache if size is different.
            </summary>
            <param name="newSize">New size.</param>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.IPickmapOwner">
            <summary>
            Creates pick map.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.IPickmapOwner.GetPickMap">
            <summary>
            Get pick map.
            </summary>
            <returns>Pickmap</returns>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.ParentInfo">
            <summary>
            Info about parent presenter
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.ParentInfo.TransformsSource">
            <summary>
            TransformsSource.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.ParentInfo.BoundsRegistration">
            <summary>
            Register data for bounds.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.ParentInfo.#ctor(AtomicusChart.Core.BaseTypes.BaseDataTypes.ITransformsSource,AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.IBoundsRegistration)">
            <summary>
            ctor.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.PresenterCreationArg">
            <summary>
            Contains render data presenter creation arguments.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.PresenterCreationArg.ChartCore">
            <summary>
            Gets chart core.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.PresenterCreationArg.PresentationTracker">
            <summary>
            Gets presentation tracker.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.PresenterCreationArg.DataRegistration">
            <summary>
            Gets data registration object.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.PresenterCreationArg.ColorMapExtractor">
            <summary>
            Gets global color map.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.PresenterCreationArg.DataChangedNotifier">
            <summary>
            Bounds notifier.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.PresenterCreationArg.BoundsComputationRegistration">
            <summary>
            Bounds computation registration.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.IColorMapExtractor">
            <summary>
            Represents color map extractor interface.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.IColorMapExtractor.ColorMapContainer">
            <summary>
            Gets color map.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.IColorMapExtractor.ColorMapSurrogate">
            <summary>
            Gets color map surrogate.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.ChartCoreManager">
            <summary>
            Contains <see cref="T:AtomicusChart.Core.DataManagement.ChartCore"/> managing logic.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.ChartCoreManager.CreateCore(System.Nullable{AtomicusChart.Core.BaseTypes.BaseUtilTypes.VideoAdapterInfo})">
            <summary>
            Creates instance of <see cref="T:AtomicusChart.Core.DataManagement.ChartCore"/> for the specified video adapter.
            </summary>
            <param name="videoAdapterInfo">Video adapter information.</param>
            <returns>Chart core instance.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.ChartCoreManager.Release(AtomicusChart.Core.DataManagement.ChartCore)">
            <summary>
            Releases the specified <see cref="T:AtomicusChart.Core.DataManagement.ChartCore"/>.
            </summary>
            <param name="chartCore">Chart core instance.</param>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.ChartCore">
            <summary>
            Contains chart core infrastructure.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.ChartCore.RenderCore">
            <summary>
            Gets graphics core.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.ChartCore.SurrogateManager">
            <summary>
            Gets surrogate manager.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.ChartCore.ShaderAdaptersManager">
            <summary>
            Gets shader adapters manager.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.ChartCore.Release">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.IPresentationTracker">
            <summary>
            Contains presentation-invalidated notify methods.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.IPresentationTracker.PresentationChanged">
            <summary>
            Call this method to notify about presentation changes.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.DataPresentationCore">
            <summary>
            Contains data presentation core infrastructure.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.DataPresentationCore.AxesSettings">
            <summary>
            Gets axes settings.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.DataPresentationCore.DataSourceTracker">
            <summary>
            Gets data source tracker.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.DataPresentationCore.Light">
            <summary>
            Gets light settings.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.DataPresentationCore.EnvironmentImageReader">
            <summary>
            Gets or sets environment image reader.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.DataPresentationCore.DataScales">
            <summary>
            Gets data scales vector reference.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.DataPresentationCore.DataScales3">
            <summary>
            Gets data scales vector reference.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.DataPresentationCore.#ctor(AtomicusChart.Core.DataManagement.ChartCore)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.DataManagement.DataPresentationCore"/>.
            </summary>
            <param name="chartCore"><see cref="F:AtomicusChart.Core.DataManagement.DataPresentationCore.ChartCore"/> instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.DataPresentationCore.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.DataPresentationCore.GetBounds(AtomicusChart.Interface.Data.Scales@,AtomicusChart.Interface.CameraView.Bounds@,AtomicusChart.Interface.AxesData.BoundsSelectorDelegate)">
            <summary>
            Get bounds of object on scene.
            </summary>
            <param name="scales">Scales.</param>
            <param name="boundsSelector">Selector.</param>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.DataPresentationCore.ColorMapOwner.ColorMapContainer">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.IRenderingOptions">
            <summary>
            Contains rendering options.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.IRenderingOptions.TryReinit(AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription)">
            <summary>
            Tries to reinitialize underlying render target.
            </summary>
            <param name="renderTargetDescription">Render target description.</param>
            <returns>True if was reinitialized by new valid value.</returns>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.IRenderingOptions.IsOitEnabled">
            <summary>
            Gets or sets order-independent-transparency enabled flag.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.IPickRenderingManager">
            <summary>
            Contains management of picking rendering.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.IPickRenderingManager.TryStartRender(System.ValueTuple{System.Int32,System.Int32})">
            <summary>
            Starts rendering picking.
            </summary>
            <param name="resultSize">Size of pick map.</param>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.IPickRenderingManager.FinishRender">
            <summary>
            Finishes rendering picking.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.WpfRenderingContext">
            <summary>
            Contains rendering context infrastructure for wpf.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.WpfRenderingContext.StopImagePresenting">
            <summary>
            Stop image presenting.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.WpfRenderingContext.ResumePresenting">
            <summary>
            Resume image presenting.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.RenderingContext">
            <summary>
            Contains rendering context infrastructure.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.RenderingContext.RenderingOptions">
            <summary>
            Gets rendering options.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.RenderingContext.ResultInfo">
            <summary>
            Gets render result information.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.RenderingContext.View">
            <summary>
            Gets view descriptor.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.RenderingContext.PresentationTracker">
            <summary>
            Gets presentation tracker.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DataManagement.RenderingContext.SelectionRectangle">
            <summary>
            Selection rectangle.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.RenderingContext.ObjectScaling">
            <summary>
            Gets or sets object scaling coefficient.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.RenderingContext.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.RenderingContext.GetDataCoordinate2D(AtomicusChart.Interface.Data.Vector2F)">
            <summary>
            Gets coordinates of data for the specified on-screen pixel location.
            </summary>
            <param name="pixelLocation">On-screen pixel location.</param>
            <returns>Coordinates of data.</returns>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.SnapshotContext">
            <summary>
            Represents context used for snapshoting operations.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.SnapshotContext.GetRenderTargetData">
            <summary>
            Gets the snapshot binary texture output.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.DrawingContextFactory">
            <summary>
            Contains methods for creating drawing contexts.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.DrawingContextFactory.GetWpfDrawingContext(System.Action,AtomicusChart.Core.WpfRendering.IImageSourceInitializer,AtomicusChart.Core.DataManagement.DataPresentationCore,AtomicusChart.Core.DataManagement.WpfRenderingContext@,AtomicusChart.Core.Interaction.ActionController@,AtomicusChart.Core.DataManagement.PickingContext@)">
            <summary>
            Creates new drawing context used for Wpf rendering.
            </summary>
            <param name="contextPresentationChangedHandler">Presentation changed handler delegate.</param>
            <param name="imageSourceInitializer">Image source initialization helper.</param>
            <param name="dataPresentationCore">Data presentation core.</param>
            <param name="renderingContext">Rendering context.</param>
            <param name="actionController">Action controller.</param>
            <param name="pickingContext">Picking context.</param>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.DrawingContextFactory.GetWinFormDrawingContext(System.Action,System.IntPtr,AtomicusChart.Core.DataManagement.DataPresentationCore,AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription,AtomicusChart.Core.DataManagement.RenderingContext@,AtomicusChart.Core.Interaction.ActionController@,AtomicusChart.Core.DataManagement.PickingContext@)">
            <summary>
            Creates new drawing context used for WinForms rendering.
            </summary>
            <param name="contextPresentationChangedHandler">Presentation changed handler delegate.</param>
            <param name="controlHandle">Control handle.</param>
            <param name="dataPresentationCore">Data presentation core.</param>
            <param name="renderTargetDescription">Initial render target description.</param>
            <param name="renderingContext">Rendering context.</param>
            <param name="actionController">Action controller.</param>
            <param name="pickingContext">Picking context.</param>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.DrawingContextFactory.GetBitmapDrawingContext(AtomicusChart.Core.DataManagement.DataPresentationCore,AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription,System.Action)">
            <summary>
            Creates new drawing context used for WinForms rendering.
            </summary>
            <param name="contextPresentationChangedHandler">Presentation changed handler delegate.</param>
            <param name="dataPresentationCore">Data presentation core.</param>
            <param name="renderTargetDescription">Initial render target description.</param>
            <returns>Created context and it's action controller.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.DrawingContextFactory.Release(AtomicusChart.Core.DataManagement.RenderingContext)">
            <summary>
            Releases the specified context and it's internal resources.
            </summary>
            <param name="renderingContext">Rendering context instance.</param>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.ShaderAdaptersManager">
            <summary>
            Represents shader adapter manager class.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.ColorMapShaderAdapter">
            <summary>
            Gets <see cref="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.ColorMapShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.TriangleDataShaderAdapter">
            <summary>
            Gets <see cref="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.TriangleDataShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.LineAdapter">
            <summary>
            Gets <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.CommonShaderAdapter">
            <summary>
            Gets <see cref="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.CommonShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.ComputeShaderAdapter">
            <summary>
            Gets <see cref="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.ComputeShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.NormalsShaderAdapter">
            <summary>
            Gets <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.NormalsComputeShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.LabelShaderAdapter">
            <summary>
            Gets <see cref="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.LabelShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.ErrorBarShaderAdapter">
            <summary>
            Gets <see cref="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.ErrorBarShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.SeriesShaderAdapter">
            <summary>
            Gets <see cref="P:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.SeriesShaderAdapter"/> instance.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.GetShaderAdapter``1">
            <summary>
            Gets shader adapter instance for the specified type.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <returns>Shader adapter instance.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.ShaderAdaptersManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.DataManagement.ShaderAdapterResolver`1">
            <summary>
            Contains shader adapter creation logic for the specified shader adapter type.
            </summary>
            <typeparam name="TAdapter"></typeparam>
        </member>
        <member name="M:AtomicusChart.Core.DataManagement.ShaderAdapterResolver`1.Register(System.Func{AtomicusChart.Core.DirectX.DirectXCore,`0})">
            <summary>
            Registers adapter creator.
            </summary>
            <param name="newAdapterCreator">Adapter creator instance.</param>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.Utils.SharpdxExt">
            <summary>
            Contains helper methods for SharpDx.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Textures2D">
            <summary>
            Texture2d helper.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Textures2D.CreateTexture2D``1(SharpDX.Direct3D11.Device,SharpDX.DXGI.Format,``0[0:,0:])">
            <summary>
            Creates texture for SRV binding.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="format">Texture pixel format.</param>
            <param name="data">Texture initial data. First index - row index = height, second index - in row index = width.</param>
            <returns>Created texture.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.AssertForRawUav(SharpDX.Direct3D11.Buffer)">
            <summary>
            Asserts the buffer for Raw binding.
            </summary>
            <param name="buffer">Buffer for testing.</param>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CounterReader">
            <summary>
            Helps to read count from UAV.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CounterReader.#ctor(SharpDX.Direct3D11.DeviceContext)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CounterReader.GetCount(SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>
            Get UAV counter.
            </summary>
            <param name="uav">UnorderedAccessView.</param>
            <returns>Counter value.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CounterReader.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Compute">
            <summary>
            For gpu computing.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Compute.GetStructuredUav(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
            Get structured uav by buffer.
            </summary>
            <param name="device">Device.</param>
            <param name="resource">Resource.</param>
            <returns>UnorderedAccessView.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Compute.GetRawUav(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Buffer)">
            <summary>
            Create <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> instance that may be used for raw access for the specified buffer.
            </summary>
            <param name="device">Gra</param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Compute.CreateStructuredUav(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView@,SharpDX.Direct3D11.Buffer@)">
            <summary>
            Get structured uav.
            </summary>
            <param name="device">Device.</param>
            <param name="elementsCount">Count of elements.</param>
            <param name="elementSize">Size fo element.</param>
            <param name="uav">Uav.</param>
            <param name="buffer">Buffer.</param>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Compute.CreateStructuredUav(SharpDX.Direct3D11.Device,System.Int32,System.Int32)">
            <summary>
            Get structured uav.
            </summary>
            <param name="device">Device.</param>
            <param name="elementsCount">Elements count.</param>
            <param name="elementByteSize">Size of element in bytes.</param>
            <returns>UnorderedAccessView.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Compute.CreateAppendBuffer(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView@,SharpDX.Direct3D11.Buffer@)">
            <summary>
            Get append buffer and uav.
            </summary>
            <param name="device">Device.</param>
            <param name="elementsCount">Count of elements.</param>
            <param name="elementSize">Size fo element.</param>
            <param name="uav">Uav.</param>
            <param name="buffer">Buffer.</param>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Compute.CreateCounterUavWithData(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView@,SharpDX.Direct3D11.Buffer@)">
            <summary>
            Get uav with counter and buffer for data.
            </summary>
            <param name="device">Device.</param>
            <param name="elementsCount">Count of elements.</param>
            <param name="elementSize">Size fo element.</param>
            <param name="uav">Uav.</param>
            <param name="buffer">Buffer.</param>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.Compute.ReadDataFromBuffer``1(SharpDX.Direct3D11.DeviceContext,SharpDX.Direct3D11.Buffer)">
            <summary>
            Read data from buffer.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <param name="context">Context.</param>
            <param name="source">Source buffer.</param>
            <returns>Array.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateTexture2DSrv(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.DXGI.Format,System.IntPtr,System.Int32)">
            <summary>
            Creates texture for SRV binding.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="width">Texture width.</param>
            <param name="height">Texture height.</param>
            <param name="format">Texture pixel format.</param>
            <param name="data">Texture initial data.</param>
            <param name="stride">Texture initial data stride.</param>
            <returns>Created texture.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateTexture2DSrvEmpty(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.DXGI.Format)">
            <summary>
            Creates texture for SRV binding.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="width">Texture width.</param>
            <param name="height">Texture height.</param>
            <param name="format">Texture pixel format.</param>
            <returns>Created texture.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateTexture2DSrvRtvEmpty(SharpDX.Direct3D11.Device,System.Int32,System.Int32)">
            <summary>
            Creates texture with default format for SRV binding.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="width">Texture width.</param>
            <param name="height">Texture height.</param>
            <returns>Created texture.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateTexture1DSrv``1(SharpDX.Direct3D11.Device,``0[],SharpDX.DXGI.Format)">
            <summary>
            Create SRV for texture1d for array.
            </summary>
            <typeparam name="T">Type of element in array.</typeparam>
            <param name="device">Device.</param>
            <param name="data">Data array.</param>
            <param name="format">Texture format.</param>
            <returns>ShaderResourceView.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateTexture1DSrv``1(SharpDX.Direct3D11.Device,SharpDX.DXGI.Format,System.Int32)">
            <summary>
            Create SRV for texture1d for array.
            </summary>
            <typeparam name="T">Type of element in array.</typeparam>
            <param name="device">Device.</param>
            <param name="format">Texture format.</param>
            <param name="size">Size in pixels.</param>
            <returns>ShaderResourceView.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateTexture3DSrv``1(SharpDX.Direct3D11.Device,``0[],SharpDX.DXGI.Format,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create SRV for texture3d for array.
            </summary>
            <typeparam name="T">Type of element in array.</typeparam>
            <param name="device">Device.</param>
            <param name="data">Data array.</param>
            <param name="format">Texture format.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="depth">Depth.</param>
            <returns>ShaderResourceView.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateTexture3DSrv(SharpDX.Direct3D11.Device,SharpDX.DXGI.Format,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.BindFlags)">
            <summary>
            Create SRV for texture3d for array.
            </summary>
            <param name="device">Device.</param>
            <param name="format">Texture format.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="depth">Depth.</param>
            <param name="bindFlags">Bind flags.</param>
            <returns>ShaderResourceView.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateIndexBufferEmpty(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Creates empty index buffer.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="count">Initial capacity.</param>
            <returns>Created buffer.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateIndexBuffer(SharpDX.Direct3D11.Device,System.Int32,System.IntPtr)">
            <summary>
            Creates empty index buffer.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="count">Initial capacity.</param>
            <param name="data">Initial data.</param>
            <returns>Created buffer.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateIndexBuffer(SharpDX.Direct3D11.Device,System.Int32[])">
            <summary>
            Creates empty index buffer.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="indices">Initial data.</param>
            <returns>Created buffer.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbbPosition(SharpDX.Direct3D11.Device,AtomicusChart.Interface.Data.Vector3F[])">
            <summary>
            Creates new <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> for positions.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="positions">Initial data.</param>
            <returns>New <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbbPosition(SharpDX.Direct3D11.Device,System.Int32,System.IntPtr)">
            <summary>
            Creates new <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> for positions.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="pointCount">Initial capacity.</param>
            <param name="data">Initial data.</param>
            <returns>New <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbbPositionEmpty(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Creates empty <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> for positions.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="pointsCount">Initial capacity.</param>
            <returns>New <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbb``1(SharpDX.Direct3D11.Device,``0)">
            <summary>
            Creates new <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="data">Initial data.</param>
            <returns>New <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbb``1(SharpDX.Direct3D11.Device,``0[])">
            <summary>
            Creates new <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="array">Initial data.</param>
            <returns>New <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbbForCompute``1(SharpDX.Direct3D11.Device,``0[])">
            <summary>
            Creates new <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> for compute.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="array">Initial data.</param>
            <returns>New <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbb``1(SharpDX.Direct3D11.Device,System.Int32,System.IntPtr)">
            <summary>
            Creates new <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="pointsCount">Initial capacity.</param>
            <param name="data">Initial data.</param>
            <returns>New <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbbEmpty``1(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Creates new <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="pointsCount">Initial capacity.</param>
            <returns>New <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbbColorInvalid(SharpDX.Direct3D11.Device)">
            <summary>
            Creates single color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> with attached validation flag.
            </summary>
            <param name="device">Graphics device.</param>
            <returns><see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> with attached validation flag.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbbColorValid(SharpDX.Direct3D11.Device,AtomicusChart.Interface.Data.Color4)">
            <summary>
            Creates single color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> with attached validation flag.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="color">Initial color.</param>
            <returns><see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> with attached validation flag.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.UpdateVbbColor(SharpDX.Direct3D11.DeviceContext,System.ValueTuple{System.Boolean,SharpDX.Direct3D11.VertexBufferBinding}@,AtomicusChart.Interface.Data.Color4)">
            <summary>
            Updates the specified single color buffer and setup it's validation flag.
            </summary>
            <param name="context">Graphics device context.</param>
            <param name="colorVbb">Color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> with attached validation flag.</param>
            <param name="color">Color for update.</param>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateVbbColor(SharpDX.Direct3D11.Device,AtomicusChart.Interface.Data.Color4)">
            <summary>
            Creates <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> for a single color.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="color">Initial color.</param>
            <returns>Created <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.UpdateVbbColor(SharpDX.Direct3D11.DeviceContext,SharpDX.Direct3D11.VertexBufferBinding@,AtomicusChart.Interface.Data.Color4)">
            <summary>
            Updates the specified single color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.
            </summary>
            <param name="context">Graphics device context.</param>
            <param name="vbb">Single color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="color">Color for update.</param>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateStructuredSrv``1(SharpDX.Direct3D11.Device,``0*,System.Int32)">
            <summary>
            Creates Srv of buffer that contains the specified matrix data.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="pointer">Initial data.</param>
            <param name="count">Initial capacity.</param>
            <returns>Created Srv.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreateStructuredSrv``1(SharpDX.Direct3D11.Device,``0[])">
            <summary>
            Creates Srv of buffer that contains the specified matrix data.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="data">Array of data.</param>
            <returns>Created Srv.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreatePickingVbb(SharpDX.Direct3D11.Device,System.Single)">
            <summary>
            Creates <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> may be used as picking color.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="pickValue">Pick index.</param>
            <returns>Created <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.CreatePickingVbb(SharpDX.Direct3D11.Device,System.Single,System.Single)">
            <summary>
            Creates <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> may be used as picking color.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="pickValue">Pick index.</param>
            <param name="subIndex">Pick sub-index.</param>
            <returns>Created <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.GetPickColorByValue(System.Single)">
            <summary>
            Gets picking color by pick index.
            </summary>
            <param name="value">Pick index.</param>
            <returns>Picking color.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.GetPickColorByValue(System.Single,System.Single)">
            <summary>
            Gets picking color by pick index.
            </summary>
            <param name="value">Pick index.</param>
            <param name="subIndex">Pick sub-index.</param>
            <returns>Picking color.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpdxExt.DisposeAndNullBuffer(SharpDX.Direct3D11.VertexBufferBinding@)">
            <summary>
            Disposes internal buffer of <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> and null it.
            </summary>
            <param name="vertexBufferBinding"><see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> for disposing.</param>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.Utils.SharpDxConverters">
            <summary>
            Contains helper SharpDx conrveter methods.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpDxConverters.ToVector2(AtomicusChart.Interface.Data.Vector2F)">
            <summary>
            Converts the vector to SharpDX.Vector2.
            </summary>
            <param name="vector">Vector.</param>
            <returns>Vector2.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpDxConverters.ToColor4(AtomicusChart.Interface.Data.Color4)">
            <summary>
            Convert Color to SharpDX.Color4.
            </summary>
            <param name="color">Color.</param>
            <returns>Color4.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpDxConverters.ToColor3(AtomicusChart.Interface.Data.Color4)">
            <summary>
            Convert Color to SharpDX.Color3.
            </summary>
            <param name="color">Color.</param>
            <returns>Color4.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpDxConverters.ToGdiColor(AtomicusChart.Interface.Data.Color4)">
            <summary>
            Convert color to GDI color.
            </summary>
            <param name="color">Uniform color.</param>
            <returns>Gdi color.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Utils.SharpDxConverters.ToRawRectangle(AtomicusChart.Interface.Data.Margins4F)">
            <summary>
            Contexts the <see cref="T:AtomicusChart.Interface.Data.Margins4F"/> to SharpDx <see cref="T:SharpDX.Mathematics.Interop.RawRectangleF"/>.
            </summary>
            <param name="margins">Source data.</param>
            <returns>Converted data.</returns>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription">
            <summary>
            Contains render target description parameters.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.Width">
            <summary>
            Gets render target width.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.Height">
            <summary>
            Gets render target height.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.Multisampling">
            <summary>
            Gets render target multisampling level.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.SsaaCoefficient">
            <summary>
            Gets render super-sampling coefficient.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.#ctor(System.Int32,System.Int32,AtomicusChart.Interface.UtilityTypes.Multisampling,System.Single)">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription"/>.
            </summary>
            <param name="width">Render target width.</param>
            <param name="height">Render target height.</param>
            <param name="multisampling">Render target multisampling level.</param>
            <param name="ssaaCoefficient">Render target super-sampling coefficient.</param>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.#ctor(System.Int32,System.Int32,AtomicusChart.Interface.UtilityTypes.Multisampling)">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription"/>.
            </summary>
            <param name="width">Render target width.</param>
            <param name="height">Render target height.</param>
            <param name="multisampling">Render target multisampling level.</param>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.Equals(AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription)">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.GetStartSize">
            <summary>
            Gets result render texture size.
            </summary>
            <returns>Result size.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.IsSsaaEnabled">
            <summary>
            Returns true if super-sampling is enabled.
            </summary>
            <returns>True if enabled.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.IsMsaaEnabled">
            <summary>
            Returns true if multisampling is enabled.
            </summary>
            <returns>True if enabled.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription.IsInvalid">
            <summary>
            Returns true if the description is invalid.
            </summary>
            <returns>True if invalid.</returns>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.ResourcesHelper">
            <summary>
            Contains helper class used for DirectX objects state tracking.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.ResourcesHelper.StopDebugResourceResourceTracking">
            <summary>
            Stop resource tracking.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.ResourcesHelper.AddChart">
            <summary>
            Add chart for tracking.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.ResourcesHelper.RemoveChart">
            <summary>
            Remove chart from tracking.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.DirectXPipelineHelper.SetDepthStencilState(AtomicusChart.Core.DirectX.DepthStencilType)">
            <summary>
            There no any state check!
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.RasterizerType">
            <summary>
            Contains available rasterizer state types.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.RasterizerType.FillSolidMultisampledCullNone">
            <summary>
            Fill solid with multisampling, culling disabled.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.RasterizerType.FillSolidMultisampledCullBack">
            <summary>
            Fill solid with multisampling, culling back.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.RasterizerType.FillSolidMultisampledCullFront">
            <summary>
            Fill solid with multisampling, culling front.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.RasterizerType.FillSolidNonMultisampledCullFront">
            <summary>
            Fill solid without multisampling, culling front.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.DepthStencilType">
            <summary>
            Contains available depth stencil state types.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.DepthStencilType.Off">
            <summary>
            Depth is disabled.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.DepthStencilType.TestEnabledWriteEnabled">
            <summary>
            Depth-test is enabled, depth-write is enabled.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.DepthStencilType.TestEnabledWriteDisabled">
            <summary>
            Depth-test is enabled, depth-write is disabled.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.BlendStateType">
            <summary>
            Contains available blend state types.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.BlendStateType.Off">
            <summary>
            Blending is disabled.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.BlendStateType.Enabled">
            <summary>
            Default alpha-blending is enabled.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.SystemInfo">
            <summary>
            Info about system.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.SystemInfo.GetIsDefaultHardwareSupportDirectXFeatureLevel11">
            <summary>
            Get is default hardware support directX feature level 11.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.VideoAdapterHelper">
            <summary>
            Represents video adapter resolver class.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.DirectX.VideoAdapterHelper.Instance">
            <summary>
            Gets static instance of <see cref="T:AtomicusChart.Core.DirectX.VideoAdapterHelper"/>.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.VideoAdapterHelper.Release(AtomicusChart.Core.DirectX.DirectXCore)">
            <summary>
            Releases the specified instance of <see cref="T:AtomicusChart.Core.DirectX.DirectXCore"/>.
            </summary>
            <param name="renderCore">Instance to release.</param>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.VideoAdapterHelper.EngageCoreByInfo(System.Nullable{AtomicusChart.Core.BaseTypes.BaseUtilTypes.VideoAdapterInfo})">
            <summary>
            Engages core for the specified <see cref="T:AtomicusChart.Core.BaseTypes.BaseUtilTypes.VideoAdapterInfo"/>.
            </summary>
            <param name="videoAdapterInfoOrEmpty">Video adapter info (optional). Uses default adapter if not specified.</param>
            <returns><see cref="T:AtomicusChart.Core.DirectX.DirectXCore"/> for the specified adapter.</returns>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.Direct2DCore">
            <summary>
            Contains core Direct2D resources.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.Direct2DCore.DirectWriteFactory">
            <summary>
            Gets DeviceWrite factory.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.Direct2DCore.DeviceContext">
            <summary>
            Gets Direct2D device context.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.Direct2DCore.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.DirectXCore">
            <summary>
            Contains core DirectX graphics resources.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.DirectXCore.Device">
            <summary>
            Gets Direct3D device.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.DirectXCore.Context">
            <summary>
            Gets Direct3D device context.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.DirectXCore.Direct2DCore">
            <summary>
            Gets Direct2D core.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.DirectXCore.Description">
            <summary>
            Gets Direct2D core.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.DirectXCore.Release">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.DirectXCore.GetNearestSampling(AtomicusChart.Interface.UtilityTypes.Multisampling)">
            <summary>
            Gets nearest <see cref="T:SharpDX.DXGI.SampleDescription"/> for the specified multisampling level.
            </summary>
            <param name="multisampling">Multisampling level.</param>
            <returns>Sample description.</returns>
        </member>
        <member name="T:AtomicusChart.Core.DirectX.CoreDescription">
            <summary>
            Information about adapter
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.CoreDescription.Description">
            <summary>
            A string that contains the adapter description.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.CoreDescription.DedicatedVideoMemory">
            <summary>
            The number of bytes of dedicated video memory that are not shared with the CPU.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.CoreDescription.DedicatedSystemMemory">
            <summary>
            The number of bytes of dedicated system memory that are not shared with the CPU. This memory is allocated from available system memory at boot time.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.CoreDescription.SharedSystemMemory">
            <summary>
            The number of bytes of shared system memory. This is the maximum value of system memory that may be consumed by the adapter during operation. Any incidental memory consumed by the driver as it manages and uses video memory is additional.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.CoreDescription.DeviceId">
            <summary>
            Id of adapter.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.DirectX.CoreDescription.IsWarp">
            <summary>
            Is warp adapter.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DirectX.CoreDescription.GetMultiStringDescription">
            <summary>
            Get string description.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.FloatNumericItem">
            <summary>
            Represents numeric property item.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.FloatNumericItem.Min">
            <summary>
            Gets min value.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.FloatNumericItem.Max">
            <summary>
            Gets max value.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.FloatNumericItem.NumberOfDigits">
            <summary>
            Gets the number of digits.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.FloatNumericItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo,System.Single,System.Single,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.FloatNumericItem"/>.
            </summary>
            <param name="title">Property title.</param>
            <param name="bindingInfo">Binding info.</param>
            <param name="min">Min value.</param>
            <param name="max">Max value.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.TransferFunctionItem">
            <summary>
            Represents transfer function editor item.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.TransferFunctionItem.TransferFunction1DOwner">
            <summary>
            Gets transfer function owner.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.TransferFunctionItem.#ctor(AtomicusChart.Interface.Data.ITransferFunction1DOwner)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.TransferFunctionItem"/>.
            </summary>
            <param name="transferFunction1DOwner"></param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.TransferFunctionItem.CancelChanges">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.BooleanItem">
            <summary>
            Represents boolean property item class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.BooleanItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.BooleanItem"/>.
            </summary>
            <param name="title"></param>
            <param name="bindingInfo"></param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.BuildedItem">
            <summary>
            Represents base class for render data editor.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.BuildedItem.CancelChanges">
            <summary>
            Cancels the item pending changes.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.BuildedItem.GetBindingInfoFromExpression(System.Object,System.Linq.Expressions.LambdaExpression,System.Nullable{System.Boolean})">
            <summary>
            Creates binding info from the specified expressions.
            </summary>
            <param name="source">Data source.</param>
            <param name="expression">Expression instance.</param>
            <param name="isReadOnly">True if read only.</param>
            <returns>Created binding info.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.ColorItem">
            <summary>
            Represents color property item.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.ColorItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.ColorItem"/>.
            </summary>
            <param name="title">Item title.</param>
            <param name="bindingInfo">Binding info.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.CustomConverterItem">
            <summary>
            Represents custom property item.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.CustomConverterItem.ConvertToString">
            <summary>
            Gets to-string converter function.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.CustomConverterItem.ConvertFromString">
            <summary>
            Gets from-string converter function.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.CustomConverterItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo,System.Func{System.Object,System.String},System.Func{System.String,System.Object})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.CustomConverterItem"/>.
            </summary>
            <param name="title">Item title.</param>
            <param name="bindingInfo">Binding info.</param>
            <param name="convertToString">To-string converter function.</param>
            <param name="convertFromString">From-string converter function.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.EnumItem">
            <summary>
            Represents enumerator property item.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.EnumItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.EnumItem"/>.
            </summary>
            <param name="title">Item title.</param>
            <param name="bindingInfo">Binding info.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.FontItem">
            <summary>
            Represents font property item.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.FontItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.FontItem"/>.
            </summary>
            <param name="title">Property title.</param>
            <param name="bindingInfo">Binding info.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.NullableRangeNumericItem">
            <summary>
            Represents nullable numeric range property item.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.NullableRangeNumericItem.Min">
            <summary>
            Gets min value.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.NullableRangeNumericItem.Max">
            <summary>
            Gets max value.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.NullableRangeNumericItem.DefValue">
            <summary>
            Gets default value.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.NullableRangeNumericItem.#ctor(AtomicusChart.Core.Editors.BindingInfo,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.NullableRangeNumericItem"/>.
            </summary>
            <param name="bindingInfo">Binding info.</param>
            <param name="min">Min value.</param>
            <param name="max">Max value.</param>
            <param name="defValue">Default value.</param>
            <param name="title">Item title.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.IntNumericItem">
            <summary>
            Represents numeric property item.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.IntNumericItem.Min">
            <summary>
            Gets min value.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.IntNumericItem.Max">
            <summary>
            Gets max value.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.IntNumericItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo,System.Int32,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.IntNumericItem"/>.
            </summary>
            <param name="title">Property title.</param>
            <param name="bindingInfo">Binding info.</param>
            <param name="min">Min value.</param>
            <param name="max">Max value.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.PropertyItem">
            <summary>
            Represents editor property item.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.PropertyItem.Title">
            <summary>
            Gets property title.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.PropertiesItems.PropertyItem.BindingInfo">
            <summary>
            Gets property binding info.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.PropertyItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.PropertyItem"/>.
            </summary>
            <param name="title">Property title.</param>
            <param name="bindingInfo">Binding info.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.PropertyItem.CancelChanges">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Editors.PropertiesItems.StringItem">
            <summary>
            Represent string property item.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.PropertiesItems.StringItem.#ctor(System.String,AtomicusChart.Core.Editors.BindingInfo)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.PropertiesItems.StringItem"/>.
            </summary>
            <param name="title">Property title.</param>
            <param name="bindingInfo">Binding info.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.BindingInfo">
            <summary>
            Class contains information about the property.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.BindingInfo.Source">
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.BindingInfo.PropertyPath">
            <summary>
            Gets the property path.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.BindingInfo.IsReadOnly">
            <summary>
            Gets a value indicating whether the property is read only.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.BindingInfo.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.BindingInfo.Value">
            <summary>
            Gets or sets property value.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.BindingInfo.#ctor(System.Object,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.BindingInfo"/>.
            </summary>
            <param name="source">Source object.</param>
            <param name="propertyInfo">Property info.</param>
            <param name="propertyPath">Property path.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.BindingInfo.#ctor(System.Object,System.Reflection.PropertyInfo,System.String,System.Boolean)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.BindingInfo"/>.
            </summary>
            <param name="source">Source object.</param>
            <param name="propertyInfo">Property info.</param>
            <param name="propertyPath">Property path.</param>
            <param name="readOnly">Is read-only.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.CustomItems.RangeNumericItem">
            <summary>
            Represents numeric range property item.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.CustomItems.RangeNumericItem.Min">
            <summary>
            Gets min value.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.CustomItems.RangeNumericItem.Max">
            <summary>
            Gets max value.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.CustomItems.RangeNumericItem.#ctor(AtomicusChart.Core.Editors.BindingInfo,System.Single,System.Single,System.String)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.CustomItems.RangeNumericItem"/>.
            </summary>
            <param name="bindingInfo">Binding info.</param>
            <param name="min">Min value.</param>
            <param name="max">Max value.</param>
            <param name="title">Item title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.CustomItems.RangeNumericItem.CancelChanges">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Editors.RenderDataEditorCreator">
            <summary>
            Represents render data editor creator delegate.
            </summary>
            <param name="renderData">Render data instance.</param>
            <param name="chartControl">Chart control instance.</param>
            <returns>Editor or null if editor is not registered.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Editors.RenderDataEditorCreator`1">
            <summary>
            Represents render data editor creator delegate.
            </summary>
            <typeparam name="TRenderData">Render data type.</typeparam>
            <param name="renderData">Render data instance.</param>
            <param name="chartControl">Chart control instance.</param>
            <returns>Editor or null if editor is not registered.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Editors.EditorsRegisterer">
            <summary>
            Class helper for registering editors for render dates.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.EditorsRegisterer.GetEditorDescription(System.Object,AtomicusChart.Interface.PresentationData.BaseTypes.RenderData)">
            <summary>
            Gets render data editor view model or null if editor for the specified type is not registered.
            </summary>
            <param name="chart">Chart instance.</param>
            <param name="renderData">Render data instance.</param>
            <returns>Render data editor view model or null if editor for the specified type is not registered.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Editors.EditorsRegisterer.RegisterEditorCreator``1(AtomicusChart.Core.Editors.RenderDataEditorCreator{``0})">
            <summary>
            Registers or updates editor for the specified render data.
            </summary>
            <typeparam name="TRenderData"></typeparam>
            <param name="creator"></param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.Pages.GroupPage">
            <summary>
            Represents group page editor container item.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.GroupPage.AutoSize">
            <summary>
            Gets auto-size property.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.GroupPage.Name">
            <summary>
            Gets the page name.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.GroupPage.Content">
            <summary>
            Gets the page content.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.GroupPage.#ctor(System.String,AtomicusChart.Core.Editors.PropertiesItems.BuildedItem)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.Pages.GroupPage"/>.
            </summary>
            <param name="name">Page name.</param>
            <param name="content">Page content.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.GroupPage.CancelChanges">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Editors.Pages.PropertiesPage">
            <summary>
            Base class for containers of properties. 
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.PropertiesPage.AutoSize">
            <summary>
            Gets the page auto-size flag.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.PropertiesPage.Items">
            <summary>
            Gets the page properties.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.#ctor(System.Boolean)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.Pages.PropertiesPage"/>.
            </summary>
            <param name="autoSize">Auto-size flag.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Enum}},System.String)">
            <summary>
            Adds enum property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.String)">
            <summary>
            Adds string property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddReadOnlyProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.String)">
            <summary>
            Adds read-only string property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,AtomicusChart.Interface.Data.Color4}},System.String)">
            <summary>
            Adds color property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)">
            <summary>
            Adds boolean property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddCustomProperty``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{System.Object,System.String},System.Func{System.String,System.Object},System.String)">
            <summary>
            Adds custom property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <typeparam name="TValue">Value object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="convertToString">To-string conversion function.</param>
            <param name="convertFromString">From-string conversion function.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddFontProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.String)">
            <summary>
            Adds font property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddNumericProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Int32,System.Int32,System.String)">
            <summary>
            Adds numeric property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="min">Min value.</param>
            <param name="max">Max value.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddNumericProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Single,System.Single,System.String,System.Int32)">
            <summary>
            Adds numeric property to the page.
            </summary>
            <typeparam name="TSource">Source object type.</typeparam>
            <param name="source">Source object instance.</param>
            <param name="expression">Property expression.</param>
            <param name="min">Min value.</param>
            <param name="max">Max value.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.AddTransferFunctionProperty``1(``0)">
            <summary>
            Adds transfer function property to the page.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage.CancelChanges">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Editors.Pages.PropertiesPage`1">
            <summary>
            Object attached extension of <see cref="T:AtomicusChart.Core.Editors.Pages.PropertiesPage"/>.
            </summary>
            <typeparam name="TObject">Attachment object type.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.#ctor(`0,System.Boolean)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.Pages.PropertiesPage`1"/>.
            </summary>
            <param name="source">Source object instance.</param>
            <param name="autoSize">Auto-size flag.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.AddProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Enum}},System.String)">
            <summary>
            Adds enum property to the page.
            </summary>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.AddProperty(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
            <summary>
            Adds string property to the page.
            </summary>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.AddProperty(System.Linq.Expressions.Expression{System.Func{`0,AtomicusChart.Interface.Data.Color4}},System.String)">
            <summary>
            Adds color property to the page.
            </summary>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.AddProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String)">
            <summary>
            Adds boolean property to the page.
            </summary>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.AddCustomProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{System.Object,System.String},System.Func{System.String,System.Object},System.String)">
            <summary>
            Adds custom property to the page.
            </summary>
            <typeparam name="TValue">Value object type.</typeparam>
            <param name="expression">Property expression.</param>
            <param name="convertToString">To-string conversion function.</param>
            <param name="convertFromString">From-string conversion function.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.AddFontProperty(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
            <summary>
            Adds font property to the page.
            </summary>
            <param name="expression">Property expression.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.AddNumericProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.Int32,System.String)">
            <summary>
            Adds numeric property to the page.
            </summary>
            <param name="expression">Property expression.</param>
            <param name="min">Min value.</param>
            <param name="max">Max value.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.PropertiesPage`1.AddNumericProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.Single,System.String)">
            <summary>
            Adds numeric property to the page.
            </summary>
            <param name="expression">Property expression.</param>
            <param name="min">Min value.</param>
            <param name="max">Max value.</param>
            <param name="title">Property title.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.Pages.StackPage">
            <summary>
            Represents container of other pages which arranged in series. 
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.StackPage.Orientation">
            <summary>
            Gets the page orientation.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.StackPage.Items">
            <summary>
            Gets the page children items.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.StackPage.#ctor(AtomicusChart.Core.Editors.Pages.Orientation)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.Pages.StackPage"/>.
            </summary>
            <param name="orientation">Page orientation.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.StackPage.CancelChanges">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.StackPage.AddPage(AtomicusChart.Core.Editors.PropertiesItems.BuildedItem)">
            <summary>
            Adds the item to the page.
            </summary>
            <param name="page">Page to add.</param>
        </member>
        <member name="T:AtomicusChart.Core.Editors.Pages.Orientation">
            <summary>
            Orientation of controls.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Editors.Pages.Orientation.Vertical">
            <summary>
            The vertical.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Editors.Pages.Orientation.Horizontal">
            <summary>
            The horizontal.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Editors.Pages.TabsPage">
            <summary>
            Represents container of other pages which arranged in tabs. 
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.TabsPage.AutoSize">
            <summary>
            Gets the page auto-size flag.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.Pages.TabsPage.Items">
            <summary>
            Gets the page children items.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.TabsPage.#ctor(System.Boolean)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.Pages.TabsPage"/>.
            </summary>
            <param name="autoSize">Auto-size flag.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.TabsPage.AddTabPage(System.String,AtomicusChart.Core.Editors.PropertiesItems.BuildedItem)">
            <summary>
            Adds tab to the page.
            </summary>
            <param name="title">Tab title.</param>
            <param name="page">Tab content.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.Pages.TabsPage.CancelChanges">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase">
            <summary>
            Represents render data editor view model base class.
            </summary>
        </member>
        <member name="E:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase.CloseWindow">
            <summary>
            The event is called any time the editor is about to be closed.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase.Title">
            <summary>
            Gets the editor title.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase.Content">
            <summary>
            Gets the editor content.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase.#ctor(System.String,AtomicusChart.Core.Editors.PropertiesItems.BuildedItem)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase"/>.
            </summary>
            <param name="title">Editor title.</param>
            <param name="content">Editor content.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase.Apply">
            <summary>
            Applies data changes.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase.Cancel">
            <summary>
            Cancels data changes.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase.WindowClosed">
            <summary>
            Closes editor's window.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.ViewModels.EditorViewModelBase.Restore">
            <summary>
            Restores data.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Editors.ViewModels.RenderDataEditorViewModel">
            <summary>
            Base class for description of RenderData editors.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Editors.ViewModels.RenderDataEditorViewModel.#ctor(AtomicusChart.Interface.PresentationData.BaseTypes.RenderData,AtomicusChart.Core.Editors.PropertiesItems.BuildedItem)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Editors.ViewModels.RenderDataEditorViewModel"/>.
            </summary>
            <param name="renderData">Render data instance.</param>
            <param name="content">Content instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.Editors.ViewModels.RenderDataEditorViewModel.Restore">
            <summary>
            Restores data.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Interaction.Contexts.ZoomRect2DContext">
            <summary>
            Zoom rectangle context.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Interaction.Contexts.ZoomRect2DContext.UseSetDefault">
            <summary>
            Use set deafult from left to right.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.ZoomRect2DContext.#ctor(AtomicusChart.Interface.Interaction.InteractionContextCreationArgument)">
            <summary>
            Ctor.
            </summary>
            <param name="arg">Argument for creation contexts.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.ZoomRect2DContext.StarProcessing(AtomicusChart.Interface.Interaction.InteractorEventArg)">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.ZoomRect2DContext.StopWork(AtomicusChart.Interface.Interaction.IChartEventArg)">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.ZoomRect2DContext.Move(AtomicusChart.Interface.Interaction.IChartEventArg)">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Interaction.Contexts.CameraRotationHelper">
            <summary>
            Class helps to implement rotation.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.CameraRotationHelper.RotateForward(AtomicusChart.Interface.CameraView.ContextView,System.Double)">
            <summary>
            Rotate forward.
            </summary>
            <param name="view">View to modify.</param>
            <param name="rotaionAngleDegrees">Rotation angle in radians.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.CameraRotationHelper.RotateBackward(AtomicusChart.Interface.CameraView.ContextView,System.Double)">
            <summary>
            Rotate backward.
            </summary>
            <param name="view">View to modify.</param>
            <param name="rotaionAngleDegrees">Rotation angle in radians.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.CameraRotationHelper.RotateRight(AtomicusChart.Interface.CameraView.ContextView,System.Double)">
            <summary>
            Rotate to right.
            </summary>
            <param name="view">View to modify.</param>
            <param name="rotaionAngleDegrees">Rotation angle in radians.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.CameraRotationHelper.RotateLeft(AtomicusChart.Interface.CameraView.ContextView,System.Double)">
            <summary>
            Rotate to left.
            </summary>
            <param name="view">View to modify.</param>
            <param name="rotaionAngleDegrees">Rotation angle in radians.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.CameraRotationHelper.RotateClockwise(AtomicusChart.Interface.CameraView.ContextView,System.Double)">
            <summary>
            Rotate clockwise.
            </summary>
            <param name="view">View to modify.</param>
            <param name="rotaionAngleDegrees">Rotation angle in radians.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.Contexts.CameraRotationHelper.RotateCounterClockwise(AtomicusChart.Interface.CameraView.ContextView,System.Double)">
            <summary>
            Rotate counter clockwise.
            </summary>
            <param name="view">View to modify.</param>
            <param name="rotaionAngleDegrees">Rotation angle in radians.</param>
        </member>
        <member name="P:AtomicusChart.Core.Interaction.InteractionManager.Listeners">
            <summary>
            Already registered listeners ordered by priority.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.InteractionManager.MouseEnter(AtomicusChart.Interface.Interaction.IChartEventArg)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.InteractionManager.MouseLeave(AtomicusChart.Interface.Interaction.IChartEventArg)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.InteractionManager.MouseDoubleClick(AtomicusChart.Interface.Interaction.IChartEventArg)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.InteractionManager.MouseWheel(AtomicusChart.Interface.Interaction.IChartEventArg)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Interaction.ActionController">
            <summary>
            Contains user interaction manager logic.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Interaction.ActionController.InteractionResolver">
            <inheritdoc />
        </member>
        <member name="P:AtomicusChart.Core.Interaction.ActionController.InteractionPickingStrategy">
            <inheritdoc />
        </member>
        <member name="P:AtomicusChart.Core.Interaction.ActionController.IsRenderDataInteractionEnabled">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.#ctor(AtomicusChart.Core.Interaction.InteractionManager,AtomicusChart.Core.DataManagement.IPickmapOwner,System.Func{AtomicusChart.Interface.Data.Vector2F,AtomicusChart.Interface.Data.Vector2F},AtomicusChart.Interface.CameraView.ContextView,AtomicusChart.Interface.CameraView.IScreenRatioInfo,AtomicusChart.Interface.CameraView.IDataScalingOwner,AtomicusChart.Core.Interaction.InterctionResolver)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.RegisterHandler(System.Int32,AtomicusChart.Interface.Interaction.IEventListener)">
            <summary>
            Register handler of events.
            </summary>
            <param name="priority">Priority of handler. Define order of calling eventListeners.</param>
            <param name="listener">Event listener.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.RemoveHandler(AtomicusChart.Interface.Interaction.IEventListener)">
            <summary>
            Remove event listener from event processing queue.
            </summary>
            <param name="eventsListener">Listener for remove.</param>
            <returns>True - listener was removed. False - there is no such listener.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.RemoveHandler(System.Int32)">
            <summary>
            Remove event listener from event processing queue.
            </summary>
            <param name="priority">Priority of event listener.</param>
            <returns>True - listener was removed. False - there is no corresponded listener.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnMouseDown(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Raise MouseDown handler.
            </summary>
            <param name="arg">Event information.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnMouseUp(AtomicusChart.Interface.Interaction.InteractorEventArg@,System.Boolean@)">
            <summary>
            Raise MouseUp handler.
            </summary>
            <param name="arg">Event information.</param>
            <param name="isCaptured">Is mouse captured.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnMouseMove(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Raise MouseMove handler.
            </summary>
            <param name="arg">Event information.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnMouseEnter(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Raise MouseEnter handler.
            </summary>
            <param name="arg">Event information.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnMouseLeave(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Raise MouseLeave handler.
            </summary>
            <param name="arg">Event information.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnMouseDoubleClick(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Raise MouseDoubleClick handler.
            </summary>
            <param name="arg">Event information.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnMouseWheel(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Raise MouseWheel handler.
            </summary>
            <param name="arg">Event information.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnKeyDown(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Key down handler.
            </summary>
            <param name="arg">Interaction event arg.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.OnKeyUp(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Key up handler.
            </summary>
            <param name="arg">Interaction event arg.</param>
        </member>
        <member name="M:AtomicusChart.Core.Interaction.ActionController.PresentationChanged(AtomicusChart.Interface.Interaction.InteractorEventArg@)">
            <summary>
            Presentation changed.
            </summary>
            <param name="arg">Current state.</param>
        </member>
        <member name="T:AtomicusChart.Core.Interaction.HotkeyConfig">
            <summary>
            Configuration of user hotkeys.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Trackers.EmptyPreviewTracker">
            <summary>
            Represents empty 
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Trackers.EmptyPreviewTracker.DrawPreview">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Trackers.SimplePreviewTracker`1">
            <summary>
            Represents simple preview tracker implementation.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
        </member>
        <member name="F:AtomicusChart.Core.Legend.Previews.Trackers.SimplePreviewTracker`1.Data">
            <summary>
            Gets tracker data.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Legend.Previews.Trackers.SimplePreviewTracker`1.ColorMapOwner">
            <summary>
            Gets tracker chart instance.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Trackers.SimplePreviewTracker`1.#ctor(System.Collections.Generic.HashSet{System.String},`0,AtomicusChart.Core.IColorMapOwner,AtomicusChart.Core.Legend.Previews.Drawers.PreviewDrawer{`0})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Legend.Previews.Trackers.SimplePreviewTracker`1"/>.
            </summary>
            <param name="propNamesForTracking">Properties for tracking.</param>
            <param name="data">Data for tracking.</param>
            <param name="chart">Chart instance.</param>
            <param name="previewDrawer">Preview drawer instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Trackers.SimplePreviewTracker`1.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Trackers.SimplePreviewTracker`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Trackers.SimplePreviewTracker`1.DrawPreview">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Trackers.BasePreviewTracker">
            <summary>
            Represents preview tracker base class.
            </summary>
        </member>
        <member name="E:AtomicusChart.Core.Legend.Previews.Trackers.BasePreviewTracker.PreviewChanged">
            <summary>
            The event is invoked whenever preview has changes.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Trackers.BasePreviewTracker.OnPreviewChanged">
            <summary>
            Call this method to notify about preview changes.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Trackers.BasePreviewTracker.DrawPreview">
            <summary>
            Draws preview bitmap.
            </summary>
            <returns>Preview bitmap.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Trackers.BasePreviewTracker.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.ColorLegendPreviewDrawer`1">
            <summary>
            Contains color legend preview drawing logic.
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.ColorLegendPreviewDrawer`1.DrawPreview(`0,AtomicusChart.Core.IColorMapOwner)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.ColorLegendPreviewHelper">
            <summary>
            Contains helper methods for color legend preview drawing.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.ColorLegendPreviewHelper.DrawGradient(System.Drawing.Graphics,AtomicusChart.Interface.Data.ColorMap,System.Int32,System.Int32)">
            <summary>
            Draws gradient of the specified color map.
            </summary>
            <param name="graphics">Graphics instance.</param>
            <param name="colorMap">Color map instance.</param>
            <param name="width">Render target width.</param>
            <param name="height">Render target height</param>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.ColorLegendPreviewHelper.DrawGradient(System.Drawing.Graphics,AtomicusChart.Interface.Data.ColorMap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws gradient of the specified color map.
            </summary>
            <param name="graphics">Graphics instance.</param>
            <param name="colorMap">Color map instance.</param>
            <param name="x">Rectangle X.</param>
            <param name="y">Rectangle Y</param>
            <param name="width">Rectangle width.</param>
            <param name="height">Rectangle height</param>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.ColorLegendPreviewHelper.GetGradientBrush(AtomicusChart.Interface.Data.ColorMap,System.Int32,System.Int32)">
            <summary>
            Gets <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> for the specified color map.
            </summary>
            <param name="colorMap">Color map instance.</param>
            <param name="width">Brush width.</param>
            <param name="height">Brush height.</param>
            <returns>Created brush.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.ColorLegendPreviewHelper.GetColorBlend(AtomicusChart.Interface.Data.ColorMap)">
            <summary>
            Creates color blend for the specified color map.
            </summary>
            <param name="colorMap">Color map instance.</param>
            <returns>Created color blend.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.PicturePreviewDrawer`1">
            <summary>
            Preview drawer of pictures.
            </summary>
            <typeparam name="T">Type of preview.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.PicturePreviewDrawer`1.#ctor(System.Func{System.Drawing.Bitmap})">
            <summary>
            Initializes new picture preview drawer.
            </summary>
            <param name="previewCreator">Creator of preview for showing.</param>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.PicturePreviewDrawer`1.DrawPreview(`0,AtomicusChart.Core.IColorMapOwner)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.SeriesPreviewDrawer">
            <summary>
            Class for drawing preview of series.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.SeriesPreviewDrawer.DrawPreview(AtomicusChart.Interface.PresentationData.Series,AtomicusChart.Core.IColorMapOwner)">
            <summary>
             Draw preview bitmap from concrete primitive.
            </summary>
            <param name="primitive">Primitive for draw.</param>
            <param name="chart">Chart for drawing preview.</param>
            <returns>Preview bitmap.</returns>
            <exception cref="T:System.ArgumentException">Argument of method is null.</exception>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.SingleColorPreviewDrawer">
            <summary>
            Class for drawing preview of SingleColorPrimitive.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Legend.Previews.Drawers.SingleColorPreviewDrawer.Preview">
            <summary>
            Make request or get cached bitmap of preview.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.SingleColorPreviewDrawer.#ctor(System.Func{System.Drawing.Bitmap})">
            <summary>
            Constructor.
            </summary>
            <param name="previewGetter">Function that get preview of bitmap for coloring.</param>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.SingleColorPreviewDrawer.DrawPreview(AtomicusChart.Interface.ISingleColorOwner,AtomicusChart.Core.IColorMapOwner)">
            <summary>
             Draw preview bitmap from concrete primitive.
            </summary>
            <param name="data">Data for draw.</param>
            <param name="chart">Chart for drawing preview.</param>
            <returns>Preview bitmap.</returns>
            <exception cref="T:System.ArgumentException">Argument of method is null.</exception>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension">
            <summary>
            Extension of bitmap for replacing color.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.AsMask(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Build bitmap from alpha mask.
            </summary>
            <param name="sourceBitmap">Mask bitmap.</param>
            <param name="destinationColor">Destination color.</param>
            <returns>Result.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.AsLightMap(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Build image from light map and color.
            </summary>
            <param name="sourceBitmap">Diffuse light map, lightness component only used.</param>
            <param name="destinationColor">Destination color.</param>
            <exception cref="T:System.ArgumentException">Argument of method is null.</exception>
            <returns>Result.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.ColorMath">
            <summary>
            Color mathematics class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.ColorMath.HslToRgb(System.Double,System.Double,System.Double)">
            <summary>
            Converts a color from HSL to RGB.
            </summary>
            <remarks>Adapted from the algorithm in Foley and Van-Dam.</remarks> 
            <param name="h">Hue.</param>
            <param name="s">Saturation.</param>
            <param name="l">Lightness.</param>
            <returns>A Color structure containing the equivalent RGB values.</returns> 
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.ColorMath.RgbToHsl(System.Drawing.Color)">
            <summary>
            Converts RGB color to HSL color.
            </summary>
            <param name="c">RGB color.</param>
            <returns>HSL color.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.ColorMath.AdjustHsl(System.Drawing.Color,System.Double,System.Double,System.Double)">
            <summary>
            Adjust HSL components in RGB color.
            </summary>
            <param name="col">RGB color.</param>
            <param name="h">Hue adjust.</param>
            <param name="s">Saturate adjust.</param>
            <param name="l">Lightness adjust.</param>
            <returns>RBG color.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.ColorMath.ToRgb(AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.HslColor)">
            <summary>
            Converts HSL color to RGB.
            </summary>
            <param name="hsl">HSL color.</param>
            <returns>RGB color.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.ColorMath.TrimAlpha(System.Drawing.Color)">
            <summary>
            Get new color with same (red, green, blue) and alpha = 255.
            </summary>
            <param name="color">Color for trimming.</param>
            <returns>New non transparent color.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.ColorMath.ToHsl(System.Drawing.Color)">
            <summary>
            Converts RGB color to HSL.
            </summary>
            <param name="c">RGB color.</param>
            <returns>HSL color.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.HslColor">
            <summary>
            Describes Hue-Saturate-Lightness structure.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.HslColor.H">
            <summary>
            Hue, range 0-360.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.HslColor.S">
            <summary>
            Saturate, range 0-1.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Legend.Previews.Drawers.BitmapColorReplaceExtension.HslColor.L">
            <summary>
            Lightness, range 0-1.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Legend.Previews.Drawers.PreviewDrawer`1">
            <summary>
            Class for drawing preview.
            </summary>
            <typeparam name="TData">Type of preview.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Legend.Previews.Drawers.PreviewDrawer`1.DrawPreview(`0,AtomicusChart.Core.IColorMapOwner)">
            <summary>
            Draw preview.
            </summary>
            <param name="data">Data for drawing preview.</param>
            <param name="chart">Chart.</param>
            <returns>Preview.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.BaseRenderDataBoundsTracker">
            <summary>
            Base class for bounds tracking.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.BaseRenderDataBoundsTracker.Dispose">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.BaseRenderDataBoundsTracker.SetupTransform">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.BaseRenderDataBoundsTracker.SetInitialBoundsKeeper(AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache)">
            <summary>
            set new initial bounds keeper.
            </summary>
            <param name="newInitialBoundsCache">New initial bounds keeper.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.BaseRenderDataBoundsTracker.GetTransformedBoundsCenter">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.BaseRenderDataBoundsTracker.UpdateFromParentTransform">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.AbstractRenderDataBoundsTracker">
            <summary>
            Base class for bounds tracking.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.AbstractRenderDataBoundsTracker.UpdateFromParentTransform">
            <summary>
            Update transform from parent.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.AbstractRenderDataBoundsTracker.GetTransformedBoundsCenter">
            <summary>
            Get transformed center.
            </summary>
            <returns>Center.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.AbstractRenderDataBoundsTracker.SetupTransform">
            <summary>
            Setup transform for rendering.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.AbstractRenderDataBoundsTracker.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.IScaledBoundsOwner">
            <summary>
            Computes scaled bounds.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.IScaledBoundsOwner.TryGetTransformedBounds(AtomicusChart.Interface.Data.Scales@,AtomicusChart.Interface.CameraView.Bounds@)">
            <summary>
            Try compute scaled bounds.
            </summary>
            <param name="scales">Scales.</param>
            <param name="bounds">Bounds.</param>
            <returns>Is bounds valid.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.RenderDataBoundsResolver">
            <summary>
            Helps to create bounds managers.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.RenderDataBoundsResolver.CreateBoundsManager(AtomicusChart.Interface.PresentationData.BaseTypes.RenderData,AtomicusChart.Core.BaseTypes.BaseDataTypes.ITransformsSource,AtomicusChart.Core.DataManagement.PresenterCreationArg,AtomicusChart.Core.DataManagement.ParentInfo)">
            <summary>
            Create bounds managers.
            </summary>
            <param name="renderData">Render data.</param>
            <param name="ownTransformSource">Transform source.</param>
            <param name="argument">Argument.</param>
            <param name="parentInfo">Info about parent.</param>
            <returns>Bounds manager.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.RenderDataBoundsTracking.RenderDataBoundsResolver.CreateBoundsManager(AtomicusChart.Interface.PresentationData.BaseTypes.RenderData,AtomicusChart.Core.BaseTypes.BaseDataTypes.ITransformsSource,AtomicusChart.Core.DataManagement.PresenterCreationArg,AtomicusChart.Core.DataManagement.ParentInfo,AtomicusChart.Core.BaseTypes.BaseDataTypes.BoundsManagement.InitialBoundsCache)">
            <summary>
            Create bounds managers.
            </summary>
            <param name="renderData">Render data.</param>
            <param name="ownTransformSource">Transform source.</param>
            <param name="argument">Argument.</param>
            <param name="initialBoundsCache"></param>
            <param name="parentInfo">Info about parent.</param>
            <returns>Bounds manager.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Basic.SpecialSymbolHelper">
            <summary>
            Class helps use special symbols like superscript, subscript symbols.
            NOTE: some of these symbols may be not supported by particular fonts or output system.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Basic.SpecialSymbolHelper.SuperScriptPlus">
            <summary>
            Superscript plus sign.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Basic.SpecialSymbolHelper.SuperScriptMinus">
            <summary>
            Superscript minus sign.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Basic.SpecialSymbolHelper.GetSuprescriptDigit(System.Int32)">
            <summary>
            Get superscript char for number.
            </summary>
            <param name="digit">Digit.</param>
            <returns>Char.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Basic.LabelTextureCreator">
            <summary>
            Class for creation labels.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Basic.LabelTextureCreator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Basic.LabelTextureCreator.CreateTexture(AtomicusChart.Interface.PresentationData.Label)">
            <summary>
            Create label for texture.
            </summary>
            <param name="label">Label.</param>
            <returns>Texture for drawing.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Basic.TextureForDrawing">
            <summary>
            Texture info.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Basic.TextureForDrawing.TextureResource">
            <summary>
            Resource.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Basic.TextureForDrawing.Width">
            <summary>
            Width.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Basic.TextureForDrawing.Height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Basic.TextureForDrawing.Alignment">
            <summary>
            Alignment.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1">
            <summary>
            Base tracker for for render data.
            </summary>
            <typeparam name="TRenderData"></typeparam>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.RenderData">
            <summary>
            Render data.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.PresenterCreationArg">
            <summary>
            PresenterCreationArg.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.SurrogateManager">
            <summary>
            SurrogateManager.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.DataRenderer">
            <summary>
            DataRenderer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.BoundsTracker">
            <summary>
            BaseBoundsTracker.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.DataIndex">
            <summary>
            Render data index.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.#ctor(`0,AtomicusChart.Core.DataManagement.PresenterCreationArg)">
            <summary>
            Ctor.
            </summary>
            <param name="renderData">Render data.</param>
            <param name="presenterCreationArg">PresenterCreationArg.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.SetParentTransform">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.RenderPickmap(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.RenderOpaque(AtomicusChart.Core.RenderingCommon.DrawCallInfo,AtomicusChart.Core.BaseTypes.BaseDataTypes.ITranslucentRendererRegistrar)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.AtomicusChart#Core#BaseTypes#BaseDataTypes#ITranslucentRenderer#RenderTranslucent(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseRenderDataTracker`1.IsOpaque">
            <summary>
            Is opaques rendering.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker">
            <summary>
            Represents color map property tracker object.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker.Surrogate">
            <summary>
            Gets the tracker surrogate.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker.#ctor(AtomicusChart.Core.IColorMapOwner,AtomicusChart.Core.DataManagement.ChartCore,AtomicusChart.Core.DataManagement.IPresentationTracker,AtomicusChart.Core.DataManagement.IColorMapExtractor)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker"/>.
            </summary>
            <param name="data">Color map owner.</param>
            <param name="chartCore">Chart core instance.</param>
            <param name="presentationTracker">Presentation tracker instance.</param>
            <param name="colorMapExtractor">Global color map extractor.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker.#ctor(AtomicusChart.Core.IColorMapOwner,AtomicusChart.Core.DataManagement.PresenterCreationArg)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker"/>.
            </summary>
            <param name="data">Color map owner.</param>
            <param name="presenterCreationArg">Presenter arguments.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker.SetupRenderSettings(System.Nullable{AtomicusChart.Interface.Data.OneAxisBounds}@)">
            <summary>
            Setups rendering settings.
            </summary>
            <param name="fallbackRange">Fallback value range.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker.OnPropertyResetInner(AtomicusChart.Interface.Data.ColorMapContainer)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker.OnPropertyReleaseInner(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapContainerSurrogateTracker.OnPropertyEngageInner">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogateTracker.ResetInner(AtomicusChart.Interface.Data.ColorMap,AtomicusChart.Core.Presenters.Misc.ColorMapSurrogate)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogateTracker.ReleaseInner(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogateTracker.EngageInner">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.BaseTracker`2">
            <summary>
            Represents base class for property surrogate tracking.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
            <typeparam name="TInstance">Property object instance.</typeparam>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Misc.BaseTracker`2.Data">
            <summary>
            Gets data for tracking.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Presenters.Misc.BaseTracker`2.Instance">
            <summary>
            Gets current property object instance.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseTracker`2.#ctor(`0,System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.BaseTracker`2"/>.
            </summary>
            <param name="data">Data for tracking.</param>
            <param name="instanceAccessor">Property accessor function.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseTracker`2.Activate">
            <summary>
            Call this method to active tracker.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseTracker`2.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseTracker`2.OnPropertyResetInner(`1)">
            <summary>
            Resets the internal object.
            </summary>
            <param name="lastObject">Last object instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseTracker`2.OnPropertyReleaseInner(System.Boolean)">
            <summary>
            This method is called before surrogate has been released.
            </summary>
            <param name="isDisposing">Is on dispose flag.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseTracker`2.OnPropertyEngageInner">
            <summary>
            This method is called before surrogate has been released.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3">
            <summary>
            Represents base class for property surrogate tracking.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
            <typeparam name="TSurrogate">Surrogate type.</typeparam>
            <typeparam name="TInstance">Property object instance.</typeparam>
        </member>
        <member name="P:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.Surrogate">
            <summary>
            Gets current surrogate.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.PresentationTracker">
            <summary>
            Gets presenter creation arguments.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.#ctor(`0,AtomicusChart.Core.DataManagement.ChartCore,AtomicusChart.Core.DataManagement.IPresentationTracker,System.Linq.Expressions.Expression{System.Func{`0,`2}})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3"/>.
            </summary>
            <param name="data">Data for tracking.</param>
            <param name="presentationTracker">Presentation tracker.</param>
            <param name="chartCore">Chart core instance.</param>
            <param name="instanceAccessor">Property accessor function.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.OnPropertyResetInner(`2)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.OnPropertyReleaseInner(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.OnPropertyEngageInner">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.ResetInner(`2,`1)">
            <summary>
            Resets the internal object.
            </summary>
            <param name="lastObject">Last object instance.</param>
            <param name="lastSurrogate">Last object surrogate.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.ReleaseInner(System.Boolean)">
            <summary>
            This method is called before surrogate has been released.
            </summary>
            <param name="isDisposing">Is on dispose flag.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3.EngageInner">
            <summary>
            This method is called before surrogate has been released.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.BaseSurrogateReaderTracker`4">
            <summary>
            Represents extension of <see cref="T:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3"/> for data reader tracking.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
            <typeparam name="TSurrogate">Surrogate type.</typeparam>
            <typeparam name="TWriter">Writer type.</typeparam>
            <typeparam name="TInstance">Instance type.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateReaderTracker`4.#ctor(`0,AtomicusChart.Core.DataManagement.PresenterCreationArg,System.Linq.Expressions.Expression{System.Func{`0,`3}})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.BaseSurrogateReaderTracker`4"/>.
            </summary>
            <param name="data">Data for tracking.</param>
            <param name="presenterCreationArg">Presenter creation arguments.</param>
            <param name="readerAccessor">Property accessor function.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateReaderTracker`4.EngageInner">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateReaderTracker`4.ResetInner(`3,`1)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BaseSurrogateReaderTracker`4.ReleaseInner(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.ValueBaseSurrogateReaderTracker`4">
            <summary>
            Represents extension of <see cref="T:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3"/> for value data reader tracking.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
            <typeparam name="TSurrogate">Surrogate type.</typeparam>
            <typeparam name="TWriter">Writer type.</typeparam>
            <typeparam name="TInstance">Instance type.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ValueBaseSurrogateReaderTracker`4.#ctor(`0,AtomicusChart.Core.DataManagement.PresenterCreationArg,System.Linq.Expressions.Expression{System.Func{`0,`3}})">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.ValueBaseSurrogateReaderTracker`4"/>.
            </summary>
            <param name="data">Data for tracking.</param>
            <param name="presenterCreationArg">Presenter creation arguments.</param>
            <param name="readerAccessor">Property accessor function.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ValueBaseSurrogateReaderTracker`4.EngageInner">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ValueBaseSurrogateReaderTracker`4.ResetInner(`3,`1)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ValueBaseSurrogateReaderTracker`4.ReleaseInner(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4">
            <summary>
            Represents extension of <see cref="T:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4"/> for value data reader tracking.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
            <typeparam name="TSurrogate">Surrogate type.</typeparam>
            <typeparam name="TWriter">Writer type.</typeparam>
            <typeparam name="TInstance">Instance type.</typeparam>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4.BoundsTracker">
            <summary>
            Gets current bounds tracker.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4.#ctor(`0,AtomicusChart.Core.DataManagement.PresenterCreationArg,System.Linq.Expressions.Expression{System.Func{`0,`3}},AtomicusChart.Core.DataManagement.ParentInfo)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4"/>.
            </summary>
            <param name="data">Data for tracking.</param>
            <param name="presenterCreationArg">Presenter creation arguments.</param>
            <param name="readerAccessor">Property accessor function.</param>
            <param name="parentInfo">Parent info.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4.EngageInner">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4.ResetInner(`3,`1)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionBaseSurrogateReaderTracker`4.ReleaseInner(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.PositionsAndValuesBaseSurrogateReaderTracker`4">
            <summary>
            Represents extension of <see cref="T:AtomicusChart.Core.Presenters.Misc.BaseSurrogateTracker`3"/> for value data reader tracking.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
            <typeparam name="TSurrogate">Surrogate type.</typeparam>
            <typeparam name="TWriter">Writer type.</typeparam>
            <typeparam name="TInstance">Instance type.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionsAndValuesBaseSurrogateReaderTracker`4.#ctor(`0,AtomicusChart.Core.DataManagement.PresenterCreationArg,System.Linq.Expressions.Expression{System.Func{`0,`3}},AtomicusChart.Core.DataManagement.ParentInfo)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.PositionsAndValuesBaseSurrogateReaderTracker`4"/>.
            </summary>
            <param name="data">Data for tracking.</param>
            <param name="presenterCreationArg">Presenter creation arguments.</param>
            <param name="readerAccessor">Property accessor function.</param>
            <param name="parentInfo">Parent info.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionsAndValuesBaseSurrogateReaderTracker`4.EngageInner">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionsAndValuesBaseSurrogateReaderTracker`4.ResetInner(`3,`1)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionsAndValuesBaseSurrogateReaderTracker`4.ReleaseInner(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogate">
            <summary>
            Represents <see cref="T:AtomicusChart.Interface.Data.ColorMap"/> surrogate.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogate.ColorMapTextureSize">
            <summary>
            Gets color map texture size.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogate.Data">
            <summary>
            Gets the data the surrogate is attached to.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogate.#ctor(AtomicusChart.Interface.Data.ColorMap,AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogate"/>.
            </summary>
            <param name="colorMap">Color map instance.</param>
            <param name="args">Surrogate creation arguments.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogate.GetTextureSrv">
            <summary>
            Gets the color map texture Srv.
            </summary>
            <returns>Color map texture Srv.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ColorMapSurrogate.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.Image2DReaderSurrogate">
            <summary>
            Represents <see cref="T:AtomicusChart.Interface.DataReaders.Image2DReader"/> surrogate class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.Image2DReaderSurrogate.#ctor(AtomicusChart.Interface.DataReaders.Image2DReader,AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.Image2DReaderSurrogate"/>.
            </summary>
            <param name="data">Reader for tracking.</param>
            <param name="surrogateCreationArg">Surrogate creation arguments.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.Image2DReaderSurrogate.GetTextureSrv">
            <summary>
            Gets the surrogate texture Srv.
            </summary>
            <returns>Reader texture Srv.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.Image2DReaderSurrogate.CreateTracker(AtomicusChart.Interface.DataReaders.Image2DReader)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.Image2DReaderSurrogate.OnDisposing">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.BufferWriterBase">
            <summary>
            Represents implementation of <see cref="T:AtomicusChart.Interface.DataReaders.IResourceWriter1D"/> for GPU buffer creating.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.Device">
            <summary>
            Gets graphics device.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.Context">
            <summary>
            Gets graphics device context.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.Capacity">
            <summary>
            Gets storage capaciy.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.InvalidatedRegion">
            <summary>
            Gets currently invalidated region.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.Buffer">
            <summary>
            Gets buffer.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.IsInitialized">
            <summary>
            Gets true if internal buffer is initialized.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.BufferWriterBase"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="context">Graphics device context.</param>
            <param name="capacity">Storage capacity.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.ResetChanges">
            <summary>
            Reset buffer invalidation info.
            </summary>
            <returns>Current invalidation region info.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.CheckResource">
            <summary>
            Checks internal buffer and creates it if it's not initialized.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.SetCapacity(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.UpdateResource(System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.UpdateResource(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.RecreateBuffer">
            <summary>
            This method is called on empty buffer creation request.
            </summary>
            <returns>Created buffer.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.BufferWriterBase.RecreateBuffer(System.IntPtr)">
            <summary>
            This method is called on buffer with initial data creation request.
            </summary>
            <param name="data">Initial data.</param>
            <returns>Created buffer.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase">
            <summary>
            Represents extension of <see cref="T:AtomicusChart.Core.Presenters.Misc.BufferWriterBase"/> as base class for <see cref="P:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.VertexBufferBinding"/> based buffers.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.VertexBufferBinding">
            <summary>
            Gets internal <see cref="P:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.VertexBufferBinding"/>.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="context">Graphics device context.</param>
            <param name="capacity">Storage capacity.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.RecreateBuffer">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.RecreateBuffer(System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.CreateVbb(SharpDX.Direct3D11.VertexBufferBinding@)">
            <summary>
            This method is called on empty buffer recreation request.
            </summary>
            <param name="vbb">Created <see cref="P:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.VertexBufferBinding"/>.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.CreateVbb(SharpDX.Direct3D11.VertexBufferBinding@,System.IntPtr)">
            <summary>
            This method is called on empty buffer recreation request.
            </summary>
            <param name="vbb">Created <see cref="P:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase.VertexBufferBinding"/>.</param>
            <param name="data">Initial data.</param>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.PositionsBufferWriter">
            <summary>
            Represents implementation of <see cref="T:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase"/> for positions buffer.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionsBufferWriter.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.PositionsBufferWriter"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="context">Graphics device context.</param>
            <param name="capacity">Storage capacity.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionsBufferWriter.CreateVbb(SharpDX.Direct3D11.VertexBufferBinding@)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.PositionsBufferWriter.CreateVbb(SharpDX.Direct3D11.VertexBufferBinding@,System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.ValuesBufferWriter">
            <summary>
            Represents implementation of <see cref="T:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase"/> for values buffer.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ValuesBufferWriter.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.ValuesBufferWriter"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="context">Graphics device context.</param>
            <param name="capacity">Storage capacity.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ValuesBufferWriter.CreateVbb(SharpDX.Direct3D11.VertexBufferBinding@)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.ValuesBufferWriter.CreateVbb(SharpDX.Direct3D11.VertexBufferBinding@,System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.VertexMasksBufferWriter">
            <summary>
            Represents implementation of <see cref="T:AtomicusChart.Core.Presenters.Misc.VertexBufferWriterBase"/> for vertex masks buffer.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.VertexMasksBufferWriter.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.VertexMasksBufferWriter"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="context">Graphics device context.</param>
            <param name="capacity">Storage capacity.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.VertexMasksBufferWriter.CreateVbb(SharpDX.Direct3D11.VertexBufferBinding@)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.VertexMasksBufferWriter.CreateVbb(SharpDX.Direct3D11.VertexBufferBinding@,System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Misc.IndexBufferWriter">
            <summary>
            Represents implementation of <see cref="T:AtomicusChart.Core.Presenters.Misc.IndexBufferWriter"/> for index buffer.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.IndexBufferWriter.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DeviceContext,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Misc.IndexBufferWriter"/>.
            </summary>
            <param name="device">Graphics device.</param>
            <param name="context">Graphics device context.</param>
            <param name="capacity">Storage capacity.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.IndexBufferWriter.RecreateBuffer">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Misc.IndexBufferWriter.RecreateBuffer(System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseDataRenderer`1.PresenterCreationArg">
            <summary>
            Argument for creation of presenters.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseDataRenderer`1.RenderData">
            <summary>
            Render data.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseDataRenderer`1.ShaderAdaptersManager">
            <summary>
            Shader adapter.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseDataRenderer`1.Context">
            <summary>
            DirectX context.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseDataRenderer`1.InputAssembler">
            <summary>
            DirectX InputAssembler.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseDataRenderer`1.PickIndexVbb">
            <summary>
            VertexBufferBinding for peaking.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseDataRenderer`1.#ctor(`0,System.Int32,AtomicusChart.Core.DataManagement.PresenterCreationArg)">
            <summary>
            Ctor.
            </summary>
            <param name="renderData">RenderData.</param>
            <param name="dataIndex">Redner data index.</param>
            <param name="presenterCreationArg">PresenterCreationArg.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseDataRenderer`1.Dispose">
            <inheritdoc />
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.MeshTracker`2.DataSurrogate">
            <summary>
            Data surrogate.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.MeshTracker`2.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitiveSurrogate">
            <summary>
            Surrogate for primitive.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitiveSurrogate.MeshTracker">
            <summary>
            Mesh tracker.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitiveSurrogate.CreateTracker(AtomicusChart.Interface.PresentationData.Primitives.SingleColorPrimitive)">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitiveSurrogate.OnDisposing">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate">
            <summary>
            Represents <see cref="T:AtomicusChart.Interface.PresentationData.Mesh"/> graphics resources container.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.PositionsVbb">
            <summary>
            Gets positions vertex buffer binding.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.NormalsVbb">
            <summary>
            Gets normals vertex buffer binding.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.IndexBuffer">
            <summary>
            Gets index buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.AlternateIndexBuffer">
            <summary>
            Gets alternate index buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.IndicesCount">
            <summary>
            Gets count of indices.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.AlternateIndicesCount">
            <summary>
            Gets count of alternate indices.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.#ctor(AtomicusChart.Interface.PresentationData.Mesh,AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate"/>.
            </summary>
            <param name="data">Source mesh.</param>
            <param name="surrogateCreationArg">Surrogate creation arguments.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.CreateTracker(AtomicusChart.Interface.PresentationData.Mesh)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.MeshDataSurrogate.OnDisposing">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Primitives.BasePrimitiveRenderer`2">
            <summary>
            Base class for rendering primitives.
            </summary>
            <typeparam name="TPrimitive">Primitive type.</typeparam>
            <typeparam name="TDataSurrogate">Surrogate type.</typeparam>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Primitives.BasePrimitiveRenderer`2.GrayColorVbb">
            <summary>
            Vbb with gray color.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.BasePrimitiveRenderer`2.#ctor(`0,System.Int32,AtomicusChart.Core.DataManagement.PresenterCreationArg,AtomicusChart.Core.Presenters.Primitives.MeshTracker{`0,`1})">
            <summary>
            Ctor.
            </summary>
            <param name="renderData">Data.</param>
            <param name="dataIndex">Data index.</param>
            <param name="presenterCreationArg">Argument.</param>
            <param name="meshTracker">Mesh tracker.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.BasePrimitiveRenderer`2.RenderShape(AtomicusChart.Core.RenderingCommon.DrawCallInfo,SharpDX.Direct3D11.VertexBufferBinding,SharpDX.Direct3D11.VertexBufferBinding,System.Single)">
            <summary>
            Render shape.
            </summary>
            <param name="drawCallInfo">Draw call info.</param>
            <param name="colorVbb">Solid color vbb.</param>
            <param name="wireframeColorVbb">Wireframe color.</param>
            <param name="opacity">Opacity.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.BasePrimitiveRenderer`2.PrepareForMeshRendering">
            <summary>
            Prepare for mesh rendering.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Primitives.SingleColorRenderer">
            <summary>
            Renderer of single color data.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorRenderer.#ctor(AtomicusChart.Interface.PresentationData.Primitives.SingleColorPrimitive,System.Int32,AtomicusChart.Core.DataManagement.PresenterCreationArg,AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitiveSurrogate)">
            <summary>
            Ctor.
            </summary>
            <param name="renderData">Data.</param>
            <param name="dataIndex">Data index.</param>
            <param name="presenterCreationArg">Argument.</param>
            <param name="singleColorPrimitiveSurrogate">Surrogate.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorRenderer.RenderPickmap(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorRenderer.RenderOpaque(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorRenderer.RenderTranslucent(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitivePresenter`1">
            <summary>
            Presenter of single color data.
            </summary>
            <typeparam name="T">Type of data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitivePresenter`1.#ctor(`0,AtomicusChart.Core.DataManagement.PresenterCreationArg,AtomicusChart.Core.DataManagement.ParentInfo,System.Func{`0,System.Int32,AtomicusChart.Core.DataManagement.PresenterCreationArg,AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitiveSurrogate,AtomicusChart.Core.Presenters.Primitives.SingleColorRenderer})">
            <summary>
            Ctor.
            </summary>
            <param name="renderData">Data.</param>
            <param name="presenterCreationArg">Argument.</param>
            <param name="parentInfo">Parent info.</param>
            <param name="rendererResolver">Resolver of renderer.</param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitivePresenter`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitivePresenter`1.GetTransform">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Primitives.SingleColorPrimitivePresenter`1.IsOpaque">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Raster.RasterDataGeometrySurrogateTracker">
            <summary>
            Represents raster data geometry surrogate tracker object.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Raster.RasterDataGeometrySurrogateTracker.BoundsTracker">
            <summary>
            Gets bounds tracker.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Raster.RasterDataGeometrySurrogateTracker.#ctor(AtomicusChart.Interface.PresentationData.RasterDataBase,AtomicusChart.Core.DataManagement.PresenterCreationArg,AtomicusChart.Core.DataManagement.ParentInfo)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Raster.RasterDataGeometrySurrogateTracker.EngageInner">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Raster.RasterDataGeometrySurrogateTracker.ResetInner(AtomicusChart.Interface.Geometry.TextureGeometry,AtomicusChart.Core.Presenters.Raster.TextureGeometrySurrogate)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Raster.RasterDataGeometrySurrogateTracker.ReleaseInner(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Raster.RasterDataBaseRegistrationHelper">
            <summary>
            Represents shared storage for <see cref="T:AtomicusChart.Interface.PresentationData.RasterDataBase"/> render data.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.Raster.RasterDataBaseRegistrationHelper.PropNamesForRedraw">
            <summary>
            Gets property names that force redrawing.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Raster.RasterDataRendererBase`1.RenderPickmap(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Raster.RasterDataRendererBase`1.RenderOpaque(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Raster.RasterDataRendererBase`1.RenderTranslucent(AtomicusChart.Core.RenderingCommon.DrawCallInfo)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Raster.RasterDataRendererBase`1.TrySetupRasterData(AtomicusChart.Interface.DataReaders.Image2DReader@,SharpDX.Direct3D11.ShaderResourceView@)">
            <summary>
            Setups implementation raster data parameters.
            </summary>
            <param name="reader">Image reader.</param>
            <param name="imageSrv">Image reader texture Srv.</param>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.BaseRegistrationHelper">
            <summary>
            Represents base render data registration helper.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Presenters.BaseRegistrationHelper.PropNamesForRedraw">
            <summary>
            Gets properties for redrawing.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.BaseRegistrationHelper.MergeWithBase(System.Collections.Generic.HashSet{System.String},System.String[])">
            <summary>
            Merges the properties with base properties.
            </summary>
            <param name="baseClassProperties">Set for merge.</param>
            <param name="b">Set for merge.</param>
            <returns>Result of merging.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.CompositeData.TriangleContoursRenderDataTracker.GetContourLinePoints(AtomicusChart.Interface.Data.Contour)">
            <inheritdoc/>
        </member>
        <member name="E:AtomicusChart.Core.Presenters.CompositeData.TriangleContoursRenderDataTracker.ContoursChanged">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Presenters.Series.SeriesSurrogate">
            <summary>
            
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Series.SeriesSurrogate.#ctor(AtomicusChart.Interface.PresentationData.Series,AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="surrogateCreationArg"></param>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Series.SeriesSurrogate.GetColorVbb">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Series.SeriesSurrogate.GetMarkerColorVbb">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Series.SeriesSurrogate.ResetMarkerColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Series.SeriesSurrogate.ResetColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Series.SeriesSurrogate.CreateTracker(AtomicusChart.Interface.PresentationData.Series)">
            <summary>
            
            </summary>
            <param name="renderData"></param>
            <returns></returns>
        </member>
        <member name="M:AtomicusChart.Core.Presenters.Series.SeriesSurrogate.OnDisposing">
            <summary>
            
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.LabelDrawer.MultiplyByTen">
            <summary>
            "Ч10", to char conversion used because of some issues with encoding on build on some systems.
            This is not runtime issue, but issue on building.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.RenderingCommon.PictureDrawer">
            <summary>
            Contains chart rendering methods.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.PictureDrawer.FullyTransparentForWpf">
            <summary>
            Color for rendering of transparent wpf picture.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.RenderingCommon.PictureDrawer.Draw(AtomicusChart.Core.DataManagement.RenderingContext,AtomicusChart.Interface.CameraView.ContextView)">
            <summary>
            Renders content of the rendering context with the specified view.
            </summary>
            <param name="renderingContext">Rendering context.</param>
            <param name="contextView">View descriptor.</param>
        </member>
        <member name="M:AtomicusChart.Core.RenderingCommon.PictureDrawer.Draw(AtomicusChart.Core.DataManagement.RenderingContext,AtomicusChart.Interface.CameraView.ContextView,AtomicusChart.Interface.Data.Color4)">
            <summary>
            Renders content of the rendering context with the specified view.
            </summary>
            <param name="renderingContext">Rendering context.</param>
            <param name="contextView">View descriptor.</param>
            <param name="backgroundColor">Background color.</param>
        </member>
        <member name="M:AtomicusChart.Core.RenderingCommon.PictureDrawer.RedrawPickmapIfRequired(AtomicusChart.Core.DataManagement.PickingContext,AtomicusChart.Interface.CameraView.ContextView,AtomicusChart.Core.DataManagement.RenderingContext)">
            <summary>
            Renders picking map if it's content is invalid.
            </summary>
            <param name="renderingContext">Rendering context.</param>
            <param name="contextView">View descriptor.</param>
            <param name="parentRenderingContext">Parent rendering context.</param>
        </member>
        <member name="T:AtomicusChart.Core.RenderingCommon.DrawCallInfo">
            <summary>
            Contains current draw-call information.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.DataScales">
            <summary>
            Gets data scales.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.OnTargetObjectScaling">
            <summary>
            Gets object scaling.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.ContextView">
            <summary>
            Gets view descriptor.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.ViewMatrix">
            <summary>
            Gets camera transformation matrix.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.PixelSize">
            <summary>
            Gets render target pixel relative size.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.CullMode">
            <summary>
            Gets cull mode.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.DataScaleParameters">
            <summary>
            Data scales parameters.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.Mode2D">
            <summary>
            Is mode 2d.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.DrawCallInfo.Viewport">
            <summary>
            View for 2d.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.RenderingCommon.CullMode">
            <summary>
            Contains available cull modes.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.CullMode.None">
            <summary>
            None culling.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.CullMode.Front">
            <summary>
            Front culling.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.RenderingCommon.CullMode.Back">
            <summary>
            Back culling.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BaseSnapshoter">
            <summary>
            Represents class that allows to render chart data to bitmap independently of chart enhanced with cached resources.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.BaseSnapshoter.View">
            <summary>
            Gets view descriptor.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.BaseSnapshoter.ObjectScaling">
            <summary>
            Gets or sets object scaling coefficient.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.BaseSnapshoter.DataSource">
            <summary>
            Gets or sets data source for rendering.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.BaseSnapshoter.AxesSettings">
            <summary>
            Gets axes descriptor.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.BaseSnapshoter.Background">
            <summary>
            Background.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseSnapshoter.#ctor">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseSnapshoter"/>.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.BaseSnapshoter.#ctor(AtomicusChart.Core.DataManagement.DataPresentationCore)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.BaseSnapshoter"/> for the specified presentation code.
            </summary>
            <param name="dataPresentationCore">Data presentation core.</param>
        </member>
        <member name="M:AtomicusChart.Core.BaseSnapshoter.GetSnapshotData(AtomicusChart.Core.DirectX.RenderTargetManagement.RenderTargetDescription,AtomicusChart.Interface.CameraView.ContextView)">
            <summary>
            Gets bitmap raw data.
            </summary>
            <param name="description">Render target description.</param>
            <param name="customView">Customized view descriptor.</param>
            <returns>Bitmap raw data.</returns>
        </member>
        <member name="M:AtomicusChart.Core.BaseSnapshoter.Dispose">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.DataSourceTracker`1">
            <summary>
            Map changed of data source (in data source in case of INotifyCollectionChanged  and IListSource) to collection and correspond events.
            </summary>
            <typeparam name="T">Type of element collection for tracking.</typeparam>
        </member>
        <member name="P:AtomicusChart.Core.CommonInfrastructure.DataSourceTracker`1.DataSource">
            <summary>
            Data source.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.CommonInfrastructure.DataSourceTracker`1.Items">
            <summary>
            Items in DataSource ordered according to IEnumerable of dataSource.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.DataSourceTracker`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.DataSourceTracker`1.AddListener(AtomicusChart.Interface.CameraView.ICollectionChangedListener{`0})">
            <summary>
            Adds listener to the tracker.
            </summary>
            <param name="listener">Listener instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.DataSourceTracker`1.RemoveListener(AtomicusChart.Interface.CameraView.ICollectionChangedListener{`0})">
            <summary>
            Removes listener from the tracker.
            </summary>
            <param name="listener">Listener instance.</param>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.PreviewTrackerCreator">
            <summary>
            Non-strongly-typed preview tracker creator delegate.
            </summary>
            <param name="data">Render data instance.</param>
            <param name="chart">Chart instance.</param>
            <returns>Result preview tracker.</returns>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.PreviewTrackerCreator`1">
            <summary>
            Strongly-typed preview tracker creator delegate.
            </summary>
            <typeparam name="TData">Render data type.</typeparam>
            <param name="data">Render data instance.</param>
            <param name="chart">Chart instance.</param>
            <returns>Result preview tracker.</returns>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.PreviewTrackerResolver">
            <summary>
            Contains preview tracker dependency resolving logic.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.PreviewTrackerResolver.GetPreviewTracker(AtomicusChart.Interface.PresentationData.BaseTypes.RenderData,AtomicusChart.Core.IColorMapOwner)">
            <summary>
            Creates preview tracker for the specified render data and chart control.
            </summary>
            <param name="data">Render data instance.</param>
            <param name="chart">Chart instance.</param>
            <returns>Result preview tracker.</returns>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.PreviewTrackerResolver.RegisterCreator``1(AtomicusChart.Core.CommonInfrastructure.PreviewTrackerCreator{``0})">
            <summary>
            Registers preview tracker creator for the specified render data type.
            </summary>
            <typeparam name="TData">Render data type.</typeparam>
            <param name="creator">Preview tracker creator delegate.</param>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.CreateSurrogate`1">
            <summary>
            Strongly-typed surrogate creator delegate.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
            <param name="data">Data instance.</param>
            <param name="surrogateCreationArg">Surrogate creation arguments.</param>
            <returns></returns>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.SurrogateResolver">
            <summary>
            Contains surrogate dependency resolving logic.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.SurrogateResolver.Register``1(AtomicusChart.Core.CommonInfrastructure.CreateSurrogate{``0})">
            <summary>
            Register creator of surrogate for data type.
            </summary>
            <typeparam name="TData">Data type.</typeparam>
            <param name="surrogateCreator">Function of creation of surrogate.</param>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.TypeHierarchyDictionary`1">
            <summary>
            Class help implement TypeHierarchyDictionary with cache.
            </summary>
            <typeparam name="TValue">Type of value.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.TypeHierarchyDictionary`1.#ctor(System.Type,`0)">
            <summary>
            Constructor.
            </summary>
            <param name="mostDeriveType">Most derived type that can be registered in this dictionary.</param>
            <param name="keyNotFoundValue">If type wasn't registered this value will be returned.</param>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.TypeHierarchyDictionary`1.#ctor(System.Type)">
            <summary>
            Constructor.
            If Key is not founded then exception is thrown.
            </summary>
            <param name="mostDeriveType">Most derived type that can be registered in this dictionary.</param>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.TypeHierarchyDictionary`1.AddOrUpdate``1(`0)">
            <summary>
            Add value by Type.
            </summary>
            <typeparam name="TKey">Type of Key.</typeparam>
            <param name="value">Value associated with type.</param>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.TypeHierarchyDictionary`1.AddOrUpdate(System.Type,`0)">
            <summary>
            Add value by Type.
            </summary>
            <param name="key">Type of Key.</param>
            <param name="newValue">Value associated with type.</param>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.TypeHierarchyDictionary`1.TryGetValue``1(`0@)">
            <summary>
            Try get value by registered keyType.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <param name="value">Registered value if it was registered.</param>
            <returns>Was value registered.</returns>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.TypeHierarchyDictionary`1.TryGetValue(System.Type,`0@)">
            <summary>
            Try get value by registered keyType.
            </summary>
            <param name="keyType">Key type.</param>
            <param name="result">Registered value if it was registered.</param>
            <returns>Was value registered.</returns>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.CreatePresenter">
            <summary>
            Non-strongly typed render data presenter creator delegate.
            </summary>
            <param name="renderData">Render data instance.</param>
            <param name="presenterCreationArg">Presenter creation arguments.</param>
            <param name="parentInfo">Information about parent.</param>
            <returns>Presenter instance.</returns>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.CreatePresenter`1">
            <summary>
            Strongly typed render data presenter creator delegate.
            </summary>
            <typeparam name="TRenderData">Render data type.</typeparam>
            <param name="renderData">Render data instance.</param>
            <param name="presenterCreationArg">Presenter creation arguments.</param>
            <param name="parentInfo">Information about parent.</param>
            <returns>Presenter instance.</returns>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.RegisterDependantAssembley">
            <summary>
            Register dependant assembley.
            </summary>
            <param name="assembly">Dependant assembley.</param>
            <returns>Was registration found and executed.</returns>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.PresenterResolver">
            <summary>
            Contains render data presenter dependency resolving logic.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.PresenterResolver.RegisterPresenterCreator``1(AtomicusChart.Core.CommonInfrastructure.CreatePresenter{``0})">
            <summary>
            Register creator of presenter.
            </summary>
            <typeparam name="TRenderData">Type of render data for creation presenter.</typeparam>
            <param name="newCreator">Function of creation presenter.</param>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.PresenterResolver.GetPresenter(AtomicusChart.Interface.PresentationData.BaseTypes.RenderData,AtomicusChart.Core.DataManagement.PresenterCreationArg,AtomicusChart.Core.DataManagement.ParentInfo)">
            <summary>
            Creates presenter for the specified render data and arguments.
            </summary>
            <param name="renderData">Render data instance.</param>
            <param name="presenterCreationArg">Presenter creation arguments.</param>
            <param name="parentInfo">Information about parent.</param>
            <returns>Presenter instance.</returns>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.SurrogateManager">
            <summary>
            Represents surrogate manager class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.SurrogateManager.EngageSurrogate``1(System.Object)">
            <summary>
            Engages surrogate for the specified object.
            </summary>
            <typeparam name="TSurrogate">Surrogate type.</typeparam>
            <param name="data">Data instance.</param>
            <returns>Created surrogate.</returns>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.SurrogateManager.ReleaseSurrogate(System.Object)">
            <summary>
            Releases surrogate for the specified object.
            </summary>
            <param name="data">Data instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.SurrogateManager.Release">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg">
            <summary>
            Contains surrogate creation arguments.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg.ChartCore">
            <summary>
            <see cref="F:AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg.ChartCore"/> instance.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg.#ctor(AtomicusChart.Core.DataManagement.ChartCore)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.CommonInfrastructure.SurrogateCreationArg"/>.
            </summary>
            <param name="chartCore">Chart core instance.</param>
        </member>
        <member name="T:AtomicusChart.Core.DataRegistration">
            <summary>
            Contains index pool used for unique picking index generating.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.DataRegistration.RegisterRenderData(AtomicusChart.Interface.PresentationData.BaseTypes.RenderData)">
            <summary>
            Registers the specified object.
            </summary>
            <param name="renderData">Object for registration.</param>
            <returns>Unique picking identifier.</returns>
        </member>
        <member name="M:AtomicusChart.Core.DataRegistration.Unregister(System.Single)">
            <summary>
            Un-register the pick index.
            </summary>
            <param name="pickValue">Pick index for unregistration.</param>
        </member>
        <member name="M:AtomicusChart.Core.DataRegistration.GetData(System.Single)">
            <summary>
            Gets object associated with the specified pick index.
            </summary>
            <param name="pickValue">Pick index.</param>
            <returns>Registered object.</returns>
        </member>
        <member name="T:AtomicusChart.Core.IColorMapOwner">
            <summary>
            Represents interface of object that owns <see cref="T:AtomicusChart.Interface.Data.ColorMapContainer"/> instance.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.IColorMapOwner.ColorMapContainer">
            <summary>
            Gets color map.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.IDenormalizationRangeReaderOwner">
            <summary>
            Represents interface that owns <see cref="T:AtomicusChart.Interface.DataReaders.IDenormalizationRangeOwner"/> object.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.IDenormalizationRangeReaderOwner.Reader">
            <summary>
            Gets the reader.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.IValueReaderColorMapOwner">
            <summary>
            Reprsents composition of <see cref="T:AtomicusChart.Core.IColorMapOwner"/> and <see cref="T:AtomicusChart.Core.IDenormalizationRangeReaderOwner"/> interfaces.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Properties.MarkerResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.MarkerResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.MarkerResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.MarkerResources.circle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.MarkerResources.cross">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.MarkerResources.rombus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.MarkerResources.square">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.MarkerResources.triagle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Properties.PreviewResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.arrow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.collection">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.ColorMapPreview">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.cone">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.cube">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.cylinder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.cylinderline">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.disk">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.empty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.histogram">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.line">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.points">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.primitive">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.prism">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.rasterdata">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.sphere">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.surface">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.tetrahedron">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.text">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.Properties.PreviewResources.tube">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.MarkerMapper">
            <summary>
            Represents marker style to texture mapped class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.MarkerMapper.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Shaders.BaseTypes.MarkerMapper"/>.
            </summary>
            <param name="device">Graphics device.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.MarkerMapper.GetTextureForMarker(AtomicusChart.Interface.PresentationData.MarkerStyle)">
            <summary>
            Gets texture <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/> fro the specified <see cref="T:AtomicusChart.Interface.PresentationData.MarkerStyle"/>.
            </summary>
            <param name="markerStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.MarkerMapper.GetBitmap(AtomicusChart.Interface.PresentationData.MarkerStyle)">
            <summary>
            Get marker bitmap for marker style.
            </summary>
            <param name="markerStyle">Marker style.</param>
            <exception cref="T:System.ArgumentException">Marker type is not supported.</exception>
            <returns>Bitmap for marker.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.MarkerMapper.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderContainer`1">
            <summary>
            Represents base clas for shader container classes. Performs loading of shader package file from path: AssemblyName + ".Shaders.PackagedShader.cpf".
            </summary>
            <typeparam name="TDer"></typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderContainer`1.#ctor">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderContainer`1"/>
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderContainer`1.GetShaderByteCode(System.String)">
            <summary>
            Gets bytecode of a shader with the specified path.
            </summary>
            <param name="shaderName">Shader path.</param>
            <returns>Shader's bytecode or null if not exist.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.PackageOwner">
            <summary>
            Represents class that contains shader package reader instance.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.PackageOwner.PackageReader">
            <summary>
            Gets package reader.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.PackageOwner.#ctor(PackageTool.PackageReader)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Shaders.BaseTypes.PackageOwner"/>.
            </summary>
            <param name="packageReader">Package reader instance.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter">
            <summary>
            Represents extension of <see cref="T:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderAdapter"/> class with helper methods and Oit enable/disable support.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter.PixelShaderStage">
            <summary>
            Pixel shader stage.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter.InputAssembler">
            <summary>
            Input assembler stage.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter.#ctor(AtomicusChart.Core.DirectX.DirectXCore)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter"/>.
            </summary>
            <param name="renderCore">DirectX core instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter.SetShaders(SharpDX.Direct3D11.VertexShader,SharpDX.Direct3D11.GeometryShader,SharpDX.Direct3D11.PixelShader)">
            <summary>
            Sets shaders.
            </summary>
            <param name="vertexShader">Vertex shader for using.</param>
            <param name="geometryShader">Geometry shader for using.</param>
            <param name="pixelShader">Pixel shader for using.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter.EnableOit">
            <summary>
            Enables OIT for the adapter internal state.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter.DisableOit">
            <summary>
            Disables OIT for the adapter internal state.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderStageAdapter.SetShaders(SharpDX.Direct3D11.VertexShader,SharpDX.Direct3D11.PixelShader)">
            <summary>
            Sets shaders.
            </summary>
            <param name="vertexShader">Vertex shader for using.</param>
            <param name="pixelShader">Pixel shader for using.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderAdapter">
            <summary>
            Base class for shader adapters.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderAdapter.Device">
            <summary>
            Device.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderAdapter.Context">
            <summary>
            Immediate context.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderAdapter.#ctor(AtomicusChart.Core.DirectX.DirectXCore)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderAdapter.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseShaderAdapter.OnDisposing">
            <summary>
            Dispose managed resources.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.BaseConstantBuffer`1">
            <summary>
            Base class for work with constant buffer.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.BaseConstantBuffer`1.DataBuffer">
            <summary>
            Data buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.BaseConstantBuffer`1.Device">
            <summary>
            Device.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.BaseConstantBuffer`1.Context">
            <summary>
            Device.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.BaseTypes.BaseConstantBuffer`1.SlotNumber">
            <summary>
            Slot number.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseConstantBuffer`1.UpdateBuffer(`0@)">
            <summary>
            Set new value.
            </summary>
            <param name="data">Constant buffer value.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.BaseConstantBuffer`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.ShaderConstantBuffer`1">
            <summary>
            Constant buffer for the shader stage.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.ShaderConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Direct3D11.CommonShaderStage)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
            <param name="shaderStage">Shader stage.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.ShaderConstantBuffer`1.Set(`0@)">
            <summary>
            Set data to shaderStage.
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.VertexConstantBuffer`1">
            <summary>
            Constant buffer for the vertex shader stage.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.VertexConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.GeometryConstantBuffer`1">
            <summary>
            Constant buffer for the geometry shader stage.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.GeometryConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.PixelConstantBuffer`1">
            <summary>
            Constant buffer for the pixel shader stage.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.PixelConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.ComputeConstantBuffer`1">
            <summary>
            Constant buffer for the compute shader stage.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.ComputeConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.VertexPixelShadersConstantBuffer`1">
            <summary>
            Constant buffer for several shader stages.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.VertexPixelShadersConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.VertexPixelShadersConstantBuffer`1.Set(`0@)">
            <summary>
            Set data to shaderStages.
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.VertexGeometryShadersConstantBuffer`1">
            <summary>
            Constant buffer for several shader stages.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.VertexGeometryShadersConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.VertexGeometryShadersConstantBuffer`1.Set(`0@)">
            <summary>
            Set data to shaderStages.
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.BaseTypes.VertexGeometryPixelShadersConstantBuffer`1">
            <summary>
            Constant buffer for several shader stages.
            </summary>
            <typeparam name="T">Type of constant buffer data.</typeparam>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.VertexGeometryPixelShadersConstantBuffer`1.#ctor(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
            <param name="slotNumber">Constant buffer slot number.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.BaseTypes.VertexGeometryPixelShadersConstantBuffer`1.Set(`0@)">
            <summary>
            Set data to shaderStages.
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMapShaderAdapter">
            <summary>
            Represents color map shader adapter class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMapShaderAdapter.#ctor(AtomicusChart.Core.DirectX.DirectXCore)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMapShaderAdapter"/> class.
            </summary>
            <param name="renderCore">DirectX render core instance.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMapShaderAdapter.SetupColorMapSettings(AtomicusChart.Interface.Data.ColorMap,AtomicusChart.Interface.Data.OneAxisBounds,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Setups the color map parameters.
            </summary>
            <param name="colorMap">Color map instance.</param>
            <param name="valueRange">Value range.</param>
            <param name="colorMapTextureSrv">Color map texture shader resource view.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMapShaderAdapter.EnableOit">
            <inhertidoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMapShaderAdapter.DisableOit">
            <inhertidoc/>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter">
            <summary>
            Label shader adapter.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter.TextureCreator">
            <summary>
            Texture creator.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter.BillboardingParams">
            <summary>
            Parametrs of bilboarding for label.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter.EnableOit">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter.DisableOit">
            <inheritdoc />
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter.SetLabelTextureSrv(SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Set texture for label.
            </summary>
            <param name="textureSrv">Texture.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter.SetTextureShadersLayoutTopology">
            <summary>
            Set shaders for texture, layout, topology.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter.SetPickingShadersLayoutTopology">
            <summary>
            Set shaders for picking, layout, topology.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LabelShaderAdapter.OnDisposing">
            <inheritdoc />
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.BillboardingParams">
            <summary>
            Parameters of line.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.BillboardingParams.#ctor(System.Int32,System.Int32,AtomicusChart.Interface.Data.Vector2F)">
            <summary>
            Constructor.
            </summary>
            <param name="widthPixels">Width of billboard in pixels.</param>
            <param name="heightPixels">Height of billboard in pixels.</param>
            <param name="alignment">Horizontal alignment (relative).</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.BillboardingParams.#ctor(System.Int32,AtomicusChart.Interface.Data.Vector2F)">
            <summary>
            Constructor.
            </summary>
            <param name="sizePixels">Size (width and height) of billboard in pixels.</param>
            <param name="alignment">Horizontal alignment (relative).</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.NormalsComputeShaderAdapter">
            <summary>
            Shader adapter for normals computation.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.NormalsComputeShaderAdapter.CalculateNormals(SharpDX.Direct3D11.Buffer,SharpDX.Direct3D11.Buffer)">
            <summary>
            Compute normals.
            </summary>
            <param name="vertices">Vertex buffer.</param>
            <param name="indices">Index buffer.</param>
            <returns>Buffer with normals.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase">
            <summary>
            Represents base class for raster data shader adapter class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase.#ctor(AtomicusChart.Core.DirectX.DirectXCore)">
            <summary>
            Initializes new instance of <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase"/>.
            </summary>
            <param name="renderCore">DirectX core.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase.EnableOit">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase.DisableOit">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase.SetShadersLayoutSettingsTexture(AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterConstantData@,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Sets raster data shaders, layout and settings.
            </summary>
            <param name="textureData">Texture constant data.</param>
            <param name="textureSrv">Texture <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase.SetBumpShadersLayoutSettingsTexture(AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterConstantData@,SharpDX.Direct3D11.ShaderResourceView,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Sets raster data shaders, layout and settings.
            </summary>
            <param name="textureData">Texture constant data.</param>
            <param name="textureSrv">Texture <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.</param>
            <param name="bumpSrv">Bump texture <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase.OnDisposing">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase.InitializeDefaultPixelShaders(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.PixelShader@)">
            <summary>
            Initializes default pixel shaders.
            </summary>
            <param name="pixelShader">Default pixel shader.</param>
            <param name="oitPixelShader">Default pixel shader for Oit rendering.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterShaderAdapterBase.InitializeBumpPixelShaders(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.PixelShader@)">
            <summary>
            Initializes bump pixel shaders.
            </summary>
            <param name="pixelShader">Bump pixel shader.</param>
            <param name="oitPixelShader">Bump pixel shader for Oit rendering.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterConstantData">
            <summary>
            Contains raster data texture info.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterConstantData.TextureMapSize">
            <summary>
            Texture size.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterConstantData.NormalMapSize">
            <summary>
            Normal texture size.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterConstantData.ColorMapTextureWidth">
            <summary>
            Color map texture width.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterConstantData.InterpolationType">
            <summary>
            Texture interpolation type.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.RasterConstantData.IsGrayScale">
            <summary>
            Is texture gray-scale.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapter">
            <summary>
            Represents shader adapter that is used for series rendering.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapter.#ctor(AtomicusChart.Core.DirectX.DirectXCore)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapter.InitializeVertexShadersAndLayouts(SharpDX.Direct3D11.VertexShader@,SharpDX.Direct3D11.VertexShader@,SharpDX.Direct3D11.InputLayout@,SharpDX.Direct3D11.InputLayout@)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapter.InitializeGeometryShaders(SharpDX.Direct3D11.GeometryShader@,SharpDX.Direct3D11.GeometryShader@,SharpDX.Direct3D11.GeometryShader@)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapter.InitializePatternPixelShaders(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.PixelShader@)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapter.InitializeNoPatternPixelShaders(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.PixelShader@)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapter.InitializeMarkerPixelShaders(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.PixelShader@)">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase">
            <summary>
            Represets series shader adapter base class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.#ctor(AtomicusChart.Core.DirectX.DirectXCore)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.EnableOit">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.DisableOit">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.OnDisposing">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.ConfigureForPattern(System.Single,AtomicusChart.Interface.PresentationData.PatternStyle,AtomicusChart.Interface.Data.Vector2F)">
            <summary>
            Configures graphics context for series pattern rendering.
            </summary>
            <param name="widthPixels">Series line thickness.</param>
            <param name="pattern">Series pattern.</param>
            <param name="scalingAnalog">Scaling analog vector.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.ConfigureForNoPattern(System.Single)">
            <summary>
            Configures graphics context for series non-pattern rendering.
            </summary>
            <param name="widthPixels">Series line thickness.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.ConfigureForMarkers(System.Int32,AtomicusChart.Interface.PresentationData.MarkerStyle)">
            <summary>
            Configures graphics context for marker rendering.
            </summary>
            <param name="markerSize">Marker size.</param>
            <param name="marker">Marker style.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.InitializeVertexShadersAndLayouts(SharpDX.Direct3D11.VertexShader@,SharpDX.Direct3D11.VertexShader@,SharpDX.Direct3D11.InputLayout@,SharpDX.Direct3D11.InputLayout@)">
            <summary>
            Initializes series vertex shaders and layout.
            </summary>
            <param name="patternVertexShader">Pattern vertex shader.</param>
            <param name="noPatternVertexShader">No-pattern vertex shader.</param>
            <param name="patternInputLayout">Pattern input layout.</param>
            <param name="noPatternInputLayout">No-pattern input layout.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.InitializeGeometryShaders(SharpDX.Direct3D11.GeometryShader@,SharpDX.Direct3D11.GeometryShader@,SharpDX.Direct3D11.GeometryShader@)">
            <summary>
            Initializes series geometry shaders.
            </summary>
            <param name="patternGeometryShader">Pattern geometry shader.</param>
            <param name="noPatternGeometryShader">No-pattern geometry shader.</param>
            <param name="markerGeometryShader">Marker geometry shader.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.InitializePatternPixelShaders(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.PixelShader@)">
            <summary>
            Initializes pattern pixel shaders.
            </summary>
            <param name="pixelShader">Pattern pixel shader.</param>
            <param name="oitPixelShader">Pattern pixel shader for Oit rendering.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.InitializeNoPatternPixelShaders(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.PixelShader@)">
            <summary>
            Initializes no-pattern pixel shaders.
            </summary>
            <param name="pixelShader">No-pattern pixel shader.</param>
            <param name="oitPixelShader">No-pattern pixel shader for Oit rendering.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.SeriesShaderAdapterBase.InitializeMarkerPixelShaders(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.PixelShader@)">
            <summary>
            Initializes marker pixel shaders.
            </summary>
            <param name="pixelShader">Marker pixel shader.</param>
            <param name="oitPixelShader">Marker pixel shader for Oit rendering.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter">
            <summary>
            Represents triangular colored data shader adapter class.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.EnableOit">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.DisableOit">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.SetLayout2DAndShadersDirectColor">
            <summary>
            Sets direct color shaders, 2D input layout.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.SetLayout3DAndShadersDirectColor">
            <summary>
            Sets direct color shaders, 3D input layout.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.SetLayoutAndShadersLightOn">
            <summary>
            Sets shaded color shaders and input layout.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.SetInstansingShadersAndLayoutLightOn">
            <summary>
            Sets shaded instancing shaders and it's input layout.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.SetInstancingShadersAndLayoutDirectColorPicking">
            <summary>
            Sets direct color instancing shaders and it's input layout.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.DrawInstancedDirectColor(SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.ShaderResourceView,System.Int32,System.Int32)">
            <summary>
            Draws triangular colored data.
            </summary>
            <param name="positionVbb">Positions <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="colorVbb">Color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="customTransforms">Custom transforms buffer <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.</param>
            <param name="countPerInstance">Vertex count.</param>
            <param name="instancesCount">Instance count.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.DrawLightOn(SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>
            Draws triangular colored data.
            </summary>
            <param name="positionVbb">Positions <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="colorVbb">Color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="normalsVbb">Normals <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="indexBuffer">Index buffer.</param>
            <param name="countPerInstance">Vertex count.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.DrawInstancedLightOn(SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.Buffer,SharpDX.Direct3D11.ShaderResourceView,SharpDX.Direct3D11.ShaderResourceView,System.Int32,System.Int32)">
            <summary>
            Draws triangular colored data.
            </summary>
            <param name="positionVbb">Positions <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="colorVbb">Color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="normalsVbb">Normals <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="indexBuffer">Index buffer.</param>
            <param name="customTransforms">Custom transforms buffer <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.</param>
            <param name="normalsTransforms">Custom normals transforms buffer <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.</param>
            <param name="countPerInstance">Vertex count.</param>
            <param name="instancesCount">Instance count.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.DrawInstancedPicking(SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.ShaderResourceView,System.Int32,System.Int32)">
            <summary>
            Draws triangular data for picking.
            </summary>
            <param name="positionVbb">Positions <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="colorVbb">Color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="customTransforms">Custom transforms buffer <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.</param>
            <param name="countPerInstance">Vertex count.</param>
            <param name="instancesCount">Instance count.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.DrawDirectColor(SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.VertexBufferBinding@,System.Int32,System.Int32)">
            <summary>
            Draws triangular data with direct color output.
            </summary>
            <param name="positionVbb">Positions <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="colorVbb">Color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="vertexCount">Vertex count.</param>
            <param name="startVertex">Start index.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.TriangleDataShaderAdapter.OnDisposing">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter">
            <summary>
            Represents line shader adapter class.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter.Pos3Color4Layout">
            <summary>
            Gets Pos3Color4 input layout.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter.Pos2Color4Layout">
            <summary>
            Gets Pos3Color4 input layout.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter.EnableOit">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter.DisableOit">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter.OnDisposing">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter.SetShaders(System.Single)">
            <summary>
            Sets line shaders for the specified thickness.
            </summary>
            <param name="thickness">Line thickness.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineShaderAdapter.DrawLine(SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.VertexBufferBinding@,System.Single,System.Int32,System.Boolean)">
            <summary>
            Draws 3D line with the specified parameters.
            </summary>
            <param name="pointsVbb">Positions <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="colorVbb">Color <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>.</param>
            <param name="thickness">Line thickness.</param>
            <param name="vertexCount">Count of vertices.</param>
            <param name="isStrip">Strip flag.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineParams">
            <summary>
            Parameters of line.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LineParams.#ctor(System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="width">Width of pixel.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter">
            <summary>
            Adapter for common shaders and parameters.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.GrayColorVbb">
            <summary>
            <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/> with zero stride and single color (float4) buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.ViewParamsConstBuffer">
            <summary>
            Gets view parameters constant buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.CustomTransformConstBuffer">
            <summary>
            Gets custom transform parameters constant buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.ReplacementConstBuffer">
            <summary>
            Gets data scales parameters constant buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.PixelSize">
            <summary>
            Gets pixel size parameters constant buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.MaterialConstBuffer">
            <summary>
            Gets material parameters constant buffer.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.LightParams">
            <summary>
            Gets light parameters constant buffer.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.#ctor(AtomicusChart.Core.DirectX.DirectXCore)">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.SetupValueDenormalizationInfo(AtomicusChart.Core.Shaders.CommonShaderAdapters.ValueDenormalizationInfo@)">
            <summary>
            Setup custom value denormalization info.
            </summary>
            <param name="denormalizationInfo">Value denormalization info.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.SetupDefaultDenormalizationInfo">
            <summary>
            Setups default value denormalization info.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.SetupColorMaskParams(AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMaskParams@)">
            <summary>
            Setups color mask parameterse.
            </summary>
            <param name="colorMaskParams">Color mask parameters.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.SetEnvironmentTexture(SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Sets environment texture resource view.
            </summary>
            <param name="textureSrv">Texture Srv.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.CommonShaderAdapter.OnDisposing">
            <inheritdoc/>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMaskParams">
            <summary>
            Contains color masking parameters.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMaskParams.#ctor(System.Nullable{AtomicusChart.Interface.Data.Color4})">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMaskParams"/> structure.
            </summary>
            <param name="color">Optional mask color.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMaskParams.#ctor(System.Nullable{AtomicusChart.Interface.Data.Color4},System.Single)">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMaskParams"/> structure.
            </summary>
            <param name="color">Optional mask color.</param>
            <param name="alphaThreeshold">Alpha threeshold color.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMaskParams.#ctor(System.Single,System.Single)">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ColorMaskParams"/> structure.
            </summary>
            <param name="pickIndex">Pick index.</param>
            <param name="alphaThreeshold">Picking alpha threeshold.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ValueDenormalizationInfo">
            <summary>
            Contains value denormalization info.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.ValueDenormalizationInfo.NormalizationOffset">
            <summary>
            Gets normalization offset.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.ValueDenormalizationInfo.NormalizationFactor">
            <summary>
            Gets normalization factor.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ValueDenormalizationInfo.#ctor(System.Single,System.Single)">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ValueDenormalizationInfo"/> structure.
            </summary>
            <param name="normalizationOffset">Value normalization offset.</param>
            <param name="normalizationFactor">Value normalization scale.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ViewParams">
            <summary>
            BaseParams shader structure.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.ViewParams.ViewTransform">
            <summary>
            Transposed matrix of world projection.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.ViewParams.NormalTransform">
            <summary>
            Transposed matrix of transformation of normals.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.ViewParams.Scales">
            <summary>
            Scaling.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.CustomTransformParams">
            <summary>
            Custom transform matrix.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CustomTransformParams.CustomTransform">
            <summary>
            Gets or sets custom transform matrix.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CustomTransformParams.CustomNormalTransformTransposed">
            <summary>
            Gets or sets custom transposed normal transform matrix.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.CustomTransformParams.ScaleEnabled">
            <summary>
            Is scaling enabled.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.PixelSize">
            <summary>
            Parameters of pixel.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.PixelSize.width">
            <summary>
            Gets pixel relative width.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.PixelSize.height">
            <summary>
            Gets pixel relative height.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.PixelSize.#ctor(System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="width">Width of pixel.</param>
            <param name="height">Height of pixel.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams">
            <summary>
            Parameters of material.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams.AmbientIntensity">
            <summary>
            Ambient intensity.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams.DiffuseIntensity">
            <summary>
            Diffuse intensity
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams.SpecularIntensity">
            <summary>
            Specular reflection.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams.RimIntensity">
            <summary>
            Intensity of rim.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams.ReflectionColorIntensity">
            <summary>
            Intensity of reflection.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams.Opacity">
            <summary>
            Opacity of material.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams.#ctor(AtomicusChart.Interface.UtilityTypes.RenderMaterial,AtomicusChart.Interface.Data.Color4)">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams"/> structure.
            </summary>
            <param name="renderMaterial">Material info.</param>
            <param name="color">Color for alpha extraction.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams.#ctor(AtomicusChart.Interface.UtilityTypes.RenderMaterial,System.Single)">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.MaterialParams"/> structure.
            </summary>
            <param name="renderMaterial">Material info.</param>
            <param name="opacity">Material opacity.</param>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.LightParams">
            <summary>
            Light parameters.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LightParams.DiffuseLightPosition">
            <summary>
            Position of diffuse light.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LightParams.SpecularLightPosition">
            <summary>
            Position of specular light.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LightParams.RimColor">
            <summary>
            Rim color.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LightParams.SpecularColor">
            <summary>
            Specular color.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.Shaders.CommonShaderAdapters.LightParams.IsOn">
            <summary>
            If light is on.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LightParams.CreateLight(AtomicusChart.Interface.UtilityTypes.Light)">
            <summary>
            Creates light parameters for the specified light.
            </summary>
            <param name="light">Light instance.</param>
            <returns>Created parameters.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.LightParams.CreateDisabledLight">
            <summary>
            Creates disabled light.
            </summary>
            <returns>Disabled light params.</returns>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.DataScaleParameters">
            <summary>
            Contains data scaling replacement parameters.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.DataScaleParameters.#ctor(AtomicusChart.Interface.Data.Vector3F)">
            <summary>
            Initializes new <see cref="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.DataScaleParameters"/> structure.
            </summary>
            <param name="infinityReplacementScaled"></param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.DataScaleParameters.GetInfinityReplacementScaled">
            <summary>
            Gets vector.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter">
            <summary>
            Adapter for compute shaders.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Constructor.
            </summary>
            <param name="device">Device.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter.RunBoundsCalc(SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Run bounds calc for structured srv.
            </summary>
            <param name="pointsSrv">Srv with positions.</param>
            <returns>Bounds.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter.RunBoundsCalc(SharpDX.Direct3D11.VertexBufferBinding@,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Get bounds of the primitive collection.
            </summary>
            <param name="positionsBufferBinding">Buffer binding with positions.</param>
            <param name="transformBufferSrv">Instance buffer.</param>
            <returns>Bounds.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter.RunBoundsCalc(SharpDX.Direct3D11.VertexBufferBinding)">
            <summary>
            Get bounds.
            </summary>
            <param name="positionsBufferBinding">Buffer binding with positions.</param>
            <returns>Bounds.</returns>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter.GetBoundsInArea(SharpDX.Direct3D11.VertexBufferBinding,System.Int32,AtomicusChart.Interface.CameraView.Bounds@,AtomicusChart.Interface.CameraView.BoundsSet@)">
            <summary>
            Calc bounds in area.
            </summary>
            <param name="positionsBufferBinding">Data.</param>
            <param name="customPointsCount">Count to read.</param>
            <param name="restriction">Bounds parameters.</param>
            <param name="result">Result.</param>
        </member>
        <member name="M:AtomicusChart.Core.Shaders.CommonShaderAdapters.ComputeShaderAdapter.RunBoundsCalc(SharpDX.Direct3D11.VertexBufferBinding,System.Int32,System.Int32)">
            <summary>
            Get bounds.
            </summary>
            <param name="positionsBufferBinding">Buffer binding with positions.</param>
            <param name="customPointsCount">Custom count of points to calc.</param>
            <param name="customPointsOffset">Custom offset of points to calc.</param>
            <returns>Bounds.</returns>
        </member>
        <member name="T:AtomicusChart.Core.BinaryTextureData">
            <summary>
            Contains raw texture data with it's description.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BinaryTextureData.Data">
            <summary>
            Texture data represented by array of bytes.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BinaryTextureData.Format">
            <summary>
            Texture format.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BinaryTextureData.PixelsWidth">
            <summary>
            Texture width (in pixels).
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BinaryTextureData.PixelsHeight">
            <summary>
            Texture height (in pixels).
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BinaryTextureData.StrideInBytes">
            <summary>
            Texture row stride (in bytes).
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.BinaryTextureDataFormat">
            <summary>
            Contains available <see cref="T:AtomicusChart.Core.BinaryTextureData"/> texture formats.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BinaryTextureDataFormat.Undefined">
            <summary>
            Undefined texture data format.
            </summary>
        </member>
        <member name="F:AtomicusChart.Core.BinaryTextureDataFormat.B8G8R8A8_UInt">
            <summary>
            Default BGRA32 texture data format.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.StateTrackingHelper`1">
            <summary>
            Helper for state handler.
            </summary>
            <typeparam name="T">Type of state.</typeparam>
        </member>
        <member name="P:AtomicusChart.Core.StateTrackingHelper`1.Delay">
            <summary>
            Action in queue delay (milliseconds).
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.StateTrackingHelper`1.IsUndoEnabled">
            <summary>
            Is undo enabled.
            </summary>
        </member>
        <member name="P:AtomicusChart.Core.StateTrackingHelper`1.IsRedoEnabled">
            <summary>
            Is redo enabled.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.StateTrackingHelper`1.#ctor(`0)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.StateTrackingHelper`1.TryUndo(`0)">
            <summary>
            Try undo action.
            </summary>
            <returns>True if sucsess, false if failed..</returns>
        </member>
        <member name="M:AtomicusChart.Core.StateTrackingHelper`1.TryRedo(`0)">
            <summary>
            Try redo action.
            </summary>
            <returns>True if sucsess, false if failed..</returns>
        </member>
        <member name="M:AtomicusChart.Core.StateTrackingHelper`1.Reset">
            <summary>
            Clear states.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.StateTrackingHelper`1.Changing">
            <summary>
            On changed handler.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.WpfRendering.ID3D9ImageSource">
            <summary>
            Contains D3D9 texture surface control methods.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.WpfRendering.ID3D9ImageSource.SetBackBuffer(System.IntPtr)">
            <summary>
            Sets texture pointer new back buffer.
            </summary>
            <param name="surface">New texture pointer.</param>
        </member>
        <member name="M:AtomicusChart.Core.WpfRendering.ID3D9ImageSource.Invalidate">
            <summary>
            Invalidates surface content.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.WpfRendering.ID3D9ImageSource.ClearBackBuffer">
            <summary>
            Clear back buffer by setting zero ptr.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.WpfRendering.ID3D9ImageSource.Free">
            <summary>
            Free resources and tracking.
            </summary>
        </member>
        <member name="T:AtomicusChart.Core.WpfRendering.IImageSourceInitializer">
            <summary>
            Represents image source factory.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.WpfRendering.IImageSourceInitializer.SetupHardwareSource">
            <summary>
            Creates and setups hardware image source for fast graphics interop.
            </summary>
            <returns>Hardware image source.</returns>
        </member>
        <member name="M:AtomicusChart.Core.WpfRendering.IImageSourceInitializer.SetupSoftwareSource">
            <summary>
            Creates and setups software image source for non-efficient, but universal graphics interop.
            </summary>
            <returns>Software image source.</returns>
        </member>
        <member name="T:AtomicusChart.Core.WpfRendering.ISoftwareImageSource">
            <summary>
            Represents image source interface for software rendering.
            </summary>
        </member>
        <member name="M:AtomicusChart.Core.WpfRendering.ISoftwareImageSource.SetSize(System.Int32,System.Int32)">
            <summary>
            Resizes the image source.
            </summary>
            <param name="width">New width.</param>
            <param name="height">New height.</param>
        </member>
        <member name="M:AtomicusChart.Core.WpfRendering.ISoftwareImageSource.Update(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Updates the image content.
            </summary>
            <param name="data">Data for update.</param>
            <param name="rowPitch">Row pitch.</param>
            <param name="slicePitch">Slice pitch.</param>
        </member>
    </members>
</doc>
